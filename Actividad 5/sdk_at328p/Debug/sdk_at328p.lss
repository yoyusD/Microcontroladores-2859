
sdk_at328p.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000126  00800100  00001158  000011ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001158  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  00800226  00800226  00001312  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001312  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001344  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  00001384  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003359  00000000  00000000  000015ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e6e  00000000  00000000  00004905  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001d6f  00000000  00000000  00005773  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000508  00000000  00000000  000074e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000083b  00000000  00000000  000079ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c37  00000000  00000000  00008227  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003d0  00000000  00000000  00009e5e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__ctors_end>
       4:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
       8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
       c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      10:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      14:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      18:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      1c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      20:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      24:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      28:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      2c:	0c 94 c0 04 	jmp	0x980	; 0x980 <__vector_11>
      30:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      34:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      38:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      3c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      40:	0c 94 a3 04 	jmp	0x946	; 0x946 <__vector_16>
      44:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      48:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__vector_18>
      4c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      50:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      54:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      58:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      5c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      60:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      64:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
      68:	d6 02       	muls	r29, r22
      6a:	d9 02       	muls	r29, r25
      6c:	54 02       	muls	r21, r20
      6e:	61 02       	muls	r22, r17
      70:	6e 02       	muls	r22, r30
      72:	7b 02       	muls	r23, r27
      74:	88 02       	muls	r24, r24
      76:	95 02       	muls	r25, r21
      78:	a2 02       	muls	r26, r18
      7a:	af 02       	muls	r26, r31
      7c:	bc 02       	muls	r27, r28
      7e:	c9 02       	muls	r28, r25
      80:	19 03       	fmul	r17, r17
      82:	2b 03       	fmul	r18, r19
      84:	07 03       	mulsu	r16, r23
      86:	4f 03       	fmul	r20, r23
      88:	3d 03       	fmul	r19, r21
      8a:	61 03       	mulsu	r22, r17
      8c:	73 03       	mulsu	r23, r19
      8e:	97 04       	cpc	r9, r7
      90:	9a 04       	cpc	r9, r10
      92:	15 04       	cpc	r1, r5
      94:	22 04       	cpc	r2, r2
      96:	2f 04       	cpc	r2, r15
      98:	3c 04       	cpc	r3, r12
      9a:	49 04       	cpc	r4, r9
      9c:	56 04       	cpc	r5, r6
      9e:	63 04       	cpc	r6, r3
      a0:	70 04       	cpc	r7, r0
      a2:	7d 04       	cpc	r7, r13
      a4:	8a 04       	cpc	r8, r10

000000a6 <__ctors_end>:
      a6:	11 24       	eor	r1, r1
      a8:	1f be       	out	0x3f, r1	; 63
      aa:	cf ef       	ldi	r28, 0xFF	; 255
      ac:	d8 e0       	ldi	r29, 0x08	; 8
      ae:	de bf       	out	0x3e, r29	; 62
      b0:	cd bf       	out	0x3d, r28	; 61

000000b2 <__do_copy_data>:
      b2:	12 e0       	ldi	r17, 0x02	; 2
      b4:	a0 e0       	ldi	r26, 0x00	; 0
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	e8 e5       	ldi	r30, 0x58	; 88
      ba:	f1 e1       	ldi	r31, 0x11	; 17
      bc:	02 c0       	rjmp	.+4      	; 0xc2 <__do_copy_data+0x10>
      be:	05 90       	lpm	r0, Z+
      c0:	0d 92       	st	X+, r0
      c2:	a6 32       	cpi	r26, 0x26	; 38
      c4:	b1 07       	cpc	r27, r17
      c6:	d9 f7       	brne	.-10     	; 0xbe <__do_copy_data+0xc>

000000c8 <__do_clear_bss>:
      c8:	22 e0       	ldi	r18, 0x02	; 2
      ca:	a6 e2       	ldi	r26, 0x26	; 38
      cc:	b2 e0       	ldi	r27, 0x02	; 2
      ce:	01 c0       	rjmp	.+2      	; 0xd2 <.do_clear_bss_start>

000000d0 <.do_clear_bss_loop>:
      d0:	1d 92       	st	X+, r1

000000d2 <.do_clear_bss_start>:
      d2:	a3 34       	cpi	r26, 0x43	; 67
      d4:	b2 07       	cpc	r27, r18
      d6:	e1 f7       	brne	.-8      	; 0xd0 <.do_clear_bss_loop>
      d8:	0e 94 11 01 	call	0x222	; 0x222 <main>
      dc:	0c 94 aa 08 	jmp	0x1154	; 0x1154 <_exit>

000000e0 <__bad_interrupt>:
      e0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e4 <init_i2c>:
      e4:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
      e8:	84 e1       	ldi	r24, 0x14	; 20
      ea:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
      ee:	84 e0       	ldi	r24, 0x04	; 4
      f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
      f4:	08 95       	ret

000000f6 <start>:
      f6:	84 ea       	ldi	r24, 0xA4	; 164
      f8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
      fc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     100:	88 23       	and	r24, r24
     102:	e4 f7       	brge	.-8      	; 0xfc <start+0x6>
     104:	08 95       	ret

00000106 <stop>:
     106:	84 e9       	ldi	r24, 0x94	; 148
     108:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     10c:	8f e9       	ldi	r24, 0x9F	; 159
     10e:	9f e0       	ldi	r25, 0x0F	; 15
     110:	01 97       	sbiw	r24, 0x01	; 1
     112:	f1 f7       	brne	.-4      	; 0x110 <stop+0xa>
     114:	00 c0       	rjmp	.+0      	; 0x116 <stop+0x10>
     116:	00 00       	nop
     118:	08 95       	ret

0000011a <write_i2c>:
     11a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     11e:	84 ec       	ldi	r24, 0xC4	; 196
     120:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     124:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     128:	88 23       	and	r24, r24
     12a:	e4 f7       	brge	.-8      	; 0x124 <write_i2c+0xa>
     12c:	08 95       	ret

0000012e <lcd_i2c_reset>:

/*	4 bits mode (pag.46 44780 datasheet) */
void lcd_i2c_reset(void)
{
	//unsigned char data;
	start();	//START--> I2C
     12e:	0e 94 7b 00 	call	0xf6	; 0xf6 <start>
	write_i2c(PCF8574_ADDR);
     132:	80 e7       	ldi	r24, 0x70	; 112
     134:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
	
	write_i2c(0xFF); //wait for 15ms (at least)
     138:	8f ef       	ldi	r24, 0xFF	; 255
     13a:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     13e:	2f ef       	ldi	r18, 0xFF	; 255
     140:	89 ef       	ldi	r24, 0xF9	; 249
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	21 50       	subi	r18, 0x01	; 1
     146:	80 40       	sbci	r24, 0x00	; 0
     148:	90 40       	sbci	r25, 0x00	; 0
     14a:	e1 f7       	brne	.-8      	; 0x144 <lcd_i2c_reset+0x16>
     14c:	00 c0       	rjmp	.+0      	; 0x14e <lcd_i2c_reset+0x20>
     14e:	00 00       	nop
	_delay_ms(20);
	
	write_i2c(0x30+LCD_EN); //write Rs=0|RW=0|DB7=0|DB6=0|DB5=1|DB4=1 & E=1
     150:	84 e3       	ldi	r24, 0x34	; 52
     152:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
	write_i2c(0x30);		//write Rs=0|RW=0|DB7=0|DB6=0|DB5=1|DB4=1 & E=0
     156:	80 e3       	ldi	r24, 0x30	; 48
     158:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     15c:	8f e3       	ldi	r24, 0x3F	; 63
     15e:	9c e9       	ldi	r25, 0x9C	; 156
     160:	01 97       	sbiw	r24, 0x01	; 1
     162:	f1 f7       	brne	.-4      	; 0x160 <lcd_i2c_reset+0x32>
     164:	00 c0       	rjmp	.+0      	; 0x166 <lcd_i2c_reset+0x38>
     166:	00 00       	nop
	_delay_ms(10);			//wait for 4.1ms (ate least)
	
	write_i2c(0x30+LCD_EN); //write Rs=0|RW=0|DB7=0|DB6=0|DB5=1|DB4=1 & E=1
     168:	84 e3       	ldi	r24, 0x34	; 52
     16a:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
	write_i2c(0x30);		//write Rs=0|RW=0|DB7=0|DB6=0|DB5=1|DB4=1 & E=0
     16e:	80 e3       	ldi	r24, 0x30	; 48
     170:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     174:	8f e9       	ldi	r24, 0x9F	; 159
     176:	9f e0       	ldi	r25, 0x0F	; 15
     178:	01 97       	sbiw	r24, 0x01	; 1
     17a:	f1 f7       	brne	.-4      	; 0x178 <lcd_i2c_reset+0x4a>
     17c:	00 c0       	rjmp	.+0      	; 0x17e <lcd_i2c_reset+0x50>
     17e:	00 00       	nop
	_delay_ms(1);			//wait for 100 us (at least)
	
	write_i2c(0x30+LCD_EN); //write Rs=0|RW=0|DB7=0|DB6=0|DB5=1|DB4=1 & E=1
     180:	84 e3       	ldi	r24, 0x34	; 52
     182:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
	write_i2c(0x30);		//write Rs=0|RW=0|DB7=0|DB6=0|DB5=1|DB4=1 & E=0
     186:	80 e3       	ldi	r24, 0x30	; 48
     188:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     18c:	8f e9       	ldi	r24, 0x9F	; 159
     18e:	9f e0       	ldi	r25, 0x0F	; 15
     190:	01 97       	sbiw	r24, 0x01	; 1
     192:	f1 f7       	brne	.-4      	; 0x190 <lcd_i2c_reset+0x62>
     194:	00 c0       	rjmp	.+0      	; 0x196 <lcd_i2c_reset+0x68>
     196:	00 00       	nop
	_delay_ms(1);			//wait for 100 us (at least)
	
	write_i2c(0x20+LCD_EN); //write Rs=0|RW=0|DB7=0|DB6=0|DB5=1|DB4=0 & E=1
     198:	84 e2       	ldi	r24, 0x24	; 36
     19a:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
	write_i2c(0x20);		//write Rs=0|RW=0|DB7=0|DB6=0|DB5=1|DB4=0 & E=0
     19e:	80 e2       	ldi	r24, 0x20	; 32
     1a0:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     1a4:	8f e9       	ldi	r24, 0x9F	; 159
     1a6:	9f e0       	ldi	r25, 0x0F	; 15
     1a8:	01 97       	sbiw	r24, 0x01	; 1
     1aa:	f1 f7       	brne	.-4      	; 0x1a8 <lcd_i2c_reset+0x7a>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <lcd_i2c_reset+0x80>
     1ae:	00 00       	nop
	_delay_ms(1);			//wait for 100 us (at least)
	
	stop();	//STOP--> I2C
     1b0:	0e 94 83 00 	call	0x106	; 0x106 <stop>
     1b4:	08 95       	ret

000001b6 <pwm_led>:
 * Created: 07/05/2024 10:21:52 a. m.
 *  Author: guado
 */ 
#include <avr/io.h>

void pwm_led(int led_color,int duty_cycle){ //duty_cycle RANGE = 0 - 255
     1b6:	9c 01       	movw	r18, r24
	TCCR0B |= (1<<CS00)|(1<<CS01); //prescaler Fosc/64
     1b8:	95 b5       	in	r25, 0x25	; 37
     1ba:	93 60       	ori	r25, 0x03	; 3
     1bc:	95 bd       	out	0x25, r25	; 37
	TCCR2B |= (1<<CS20)|(1<<CS21); //prescaler Fosc/64
     1be:	e1 eb       	ldi	r30, 0xB1	; 177
     1c0:	f0 e0       	ldi	r31, 0x00	; 0
     1c2:	90 81       	ld	r25, Z
     1c4:	93 60       	ori	r25, 0x03	; 3
     1c6:	90 83       	st	Z, r25
	
	if(led_color == 1) //RED
     1c8:	21 30       	cpi	r18, 0x01	; 1
     1ca:	31 05       	cpc	r19, r1
     1cc:	59 f4       	brne	.+22     	; 0x1e4 <pwm_led+0x2e>
	{
		TCCR0A |= (1<<WGM01)|(1<<WGM00)|(1<<COM0A1);//fast pwm, non inverted
     1ce:	84 b5       	in	r24, 0x24	; 36
     1d0:	83 68       	ori	r24, 0x83	; 131
     1d2:	84 bd       	out	0x24, r24	; 36
		if(duty_cycle > 255){
     1d4:	6f 3f       	cpi	r22, 0xFF	; 255
     1d6:	71 05       	cpc	r23, r1
     1d8:	19 f0       	breq	.+6      	; 0x1e0 <pwm_led+0x2a>
     1da:	14 f0       	brlt	.+4      	; 0x1e0 <pwm_led+0x2a>
			duty_cycle = 255; 
     1dc:	6f ef       	ldi	r22, 0xFF	; 255
     1de:	70 e0       	ldi	r23, 0x00	; 0
		}
		OCR0A=duty_cycle; //PIND6
     1e0:	67 bd       	out	0x27, r22	; 39
     1e2:	08 95       	ret
	}
	
	else if(led_color == 2){ //GREEN
     1e4:	22 30       	cpi	r18, 0x02	; 2
     1e6:	31 05       	cpc	r19, r1
     1e8:	59 f4       	brne	.+22     	; 0x200 <pwm_led+0x4a>
		TCCR0A |= (1<<WGM01)|(1<<WGM00)|(1<<COM0B1);//fast pwm, non inverted
     1ea:	84 b5       	in	r24, 0x24	; 36
     1ec:	83 62       	ori	r24, 0x23	; 35
     1ee:	84 bd       	out	0x24, r24	; 36
		if(duty_cycle > 255){
     1f0:	6f 3f       	cpi	r22, 0xFF	; 255
     1f2:	71 05       	cpc	r23, r1
     1f4:	19 f0       	breq	.+6      	; 0x1fc <pwm_led+0x46>
     1f6:	14 f0       	brlt	.+4      	; 0x1fc <pwm_led+0x46>
			duty_cycle = 255;
     1f8:	6f ef       	ldi	r22, 0xFF	; 255
     1fa:	70 e0       	ldi	r23, 0x00	; 0
		}
		OCR0B=duty_cycle; //PIND5
     1fc:	68 bd       	out	0x28, r22	; 40
     1fe:	08 95       	ret
	}
	
	else if (led_color ==3) //BLUE
     200:	23 30       	cpi	r18, 0x03	; 3
     202:	31 05       	cpc	r19, r1
     204:	69 f4       	brne	.+26     	; 0x220 <pwm_led+0x6a>
	{
		TCCR2A |= (1<<WGM21)|(1<<WGM20)|(1<<COM2B1);//fast pwm, non inverted
     206:	e0 eb       	ldi	r30, 0xB0	; 176
     208:	f0 e0       	ldi	r31, 0x00	; 0
     20a:	80 81       	ld	r24, Z
     20c:	83 62       	ori	r24, 0x23	; 35
     20e:	80 83       	st	Z, r24
		if(duty_cycle > 255){
     210:	6f 3f       	cpi	r22, 0xFF	; 255
     212:	71 05       	cpc	r23, r1
     214:	19 f0       	breq	.+6      	; 0x21c <pwm_led+0x66>
     216:	14 f0       	brlt	.+4      	; 0x21c <pwm_led+0x66>
			duty_cycle = 255;
     218:	6f ef       	ldi	r22, 0xFF	; 255
     21a:	70 e0       	ldi	r23, 0x00	; 0
		}
		OCR2B=duty_cycle; //PIND3
     21c:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     220:	08 95       	ret

00000222 <main>:
#include <avr/interrupt.h>
#include <util/delay.h>

int main(void)
{
    init_ports();
     222:	0e 94 21 01 	call	0x242	; 0x242 <init_ports>
	
	init_i2c();
     226:	0e 94 72 00 	call	0xe4	; 0xe4 <init_i2c>
	ssd_i2c_init();
     22a:	0e 94 48 01 	call	0x290	; 0x290 <ssd_i2c_init>
	clear_screen();
     22e:	0e 94 db 02 	call	0x5b6	; 0x5b6 <clear_screen>
	init_usart(207);
     232:	8f ec       	ldi	r24, 0xCF	; 207
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	0e 94 8e 08 	call	0x111c	; 0x111c <init_usart>
	write_led();
     23a:	0e 94 84 03 	call	0x708	; 0x708 <write_led>
	sei(); /*enable general interrupts*/
     23e:	78 94       	sei
     240:	ff cf       	rjmp	.-2      	; 0x240 <main+0x1e>

00000242 <init_ports>:
 */ 
#include <avr/io.h>

void init_ports(void)
{
	DDRB = 0xFF;
     242:	8f ef       	ldi	r24, 0xFF	; 255
     244:	84 b9       	out	0x04, r24	; 4
	// PD2 input for INT0, PD3 input for INT1
	DDRD = (1<<PIND3)|(1<<PIND5)|(1<<PIND6); //pwm outputs 
     246:	88 e6       	ldi	r24, 0x68	; 104
     248:	8a b9       	out	0x0a, r24	; 10
	// PC0 input for ADC0
	DDRC &= (0 << PINC0);
     24a:	87 b1       	in	r24, 0x07	; 7
     24c:	17 b8       	out	0x07, r1	; 7
	PORTC |= (1 << PINC0); //enable Rp
     24e:	88 b1       	in	r24, 0x08	; 8
     250:	81 60       	ori	r24, 0x01	; 1
     252:	88 b9       	out	0x08, r24	; 8
     254:	08 95       	ret

00000256 <ssd_i2c_cmd>:
	}
	else if( voltage > 4. && voltage < 6){
		ssd_write(0x01);
	}

}
     256:	cf 93       	push	r28
     258:	c8 2f       	mov	r28, r24
     25a:	0e 94 7b 00 	call	0xf6	; 0xf6 <start>
     25e:	88 e7       	ldi	r24, 0x78	; 120
     260:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     264:	80 e0       	ldi	r24, 0x00	; 0
     266:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     26a:	8c 2f       	mov	r24, r28
     26c:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     270:	0e 94 83 00 	call	0x106	; 0x106 <stop>
     274:	8f e3       	ldi	r24, 0x3F	; 63
     276:	9f e1       	ldi	r25, 0x1F	; 31
     278:	01 97       	sbiw	r24, 0x01	; 1
     27a:	f1 f7       	brne	.-4      	; 0x278 <ssd_i2c_cmd+0x22>
     27c:	00 c0       	rjmp	.+0      	; 0x27e <ssd_i2c_cmd+0x28>
     27e:	00 00       	nop
     280:	8f e3       	ldi	r24, 0x3F	; 63
     282:	9f e1       	ldi	r25, 0x1F	; 31
     284:	01 97       	sbiw	r24, 0x01	; 1
     286:	f1 f7       	brne	.-4      	; 0x284 <ssd_i2c_cmd+0x2e>
     288:	00 c0       	rjmp	.+0      	; 0x28a <ssd_i2c_cmd+0x34>
     28a:	00 00       	nop
     28c:	cf 91       	pop	r28
     28e:	08 95       	ret

00000290 <ssd_i2c_init>:
     290:	0e 94 72 00 	call	0xe4	; 0xe4 <init_i2c>
     294:	0e 94 97 00 	call	0x12e	; 0x12e <lcd_i2c_reset>
     298:	8e ea       	ldi	r24, 0xAE	; 174
     29a:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     29e:	84 ed       	ldi	r24, 0xD4	; 212
     2a0:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2a4:	80 e8       	ldi	r24, 0x80	; 128
     2a6:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2aa:	88 ea       	ldi	r24, 0xA8	; 168
     2ac:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2b0:	8f e3       	ldi	r24, 0x3F	; 63
     2b2:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2b6:	83 ed       	ldi	r24, 0xD3	; 211
     2b8:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2bc:	80 e0       	ldi	r24, 0x00	; 0
     2be:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2c2:	80 e4       	ldi	r24, 0x40	; 64
     2c4:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2c8:	8d e8       	ldi	r24, 0x8D	; 141
     2ca:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2ce:	84 e1       	ldi	r24, 0x14	; 20
     2d0:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2d4:	81 ea       	ldi	r24, 0xA1	; 161
     2d6:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2da:	88 ec       	ldi	r24, 0xC8	; 200
     2dc:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2e0:	8a ed       	ldi	r24, 0xDA	; 218
     2e2:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2e6:	82 e1       	ldi	r24, 0x12	; 18
     2e8:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2ec:	81 e8       	ldi	r24, 0x81	; 129
     2ee:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2f2:	8f e0       	ldi	r24, 0x0F	; 15
     2f4:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2f8:	89 ed       	ldi	r24, 0xD9	; 217
     2fa:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     2fe:	81 ef       	ldi	r24, 0xF1	; 241
     300:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     304:	8b ed       	ldi	r24, 0xDB	; 219
     306:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     30a:	80 e4       	ldi	r24, 0x40	; 64
     30c:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     310:	84 ea       	ldi	r24, 0xA4	; 164
     312:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     316:	86 ea       	ldi	r24, 0xA6	; 166
     318:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     31c:	8f ea       	ldi	r24, 0xAF	; 175
     31e:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     322:	08 95       	ret

00000324 <ssd_write>:
     324:	cf 93       	push	r28
     326:	c8 2f       	mov	r28, r24
     328:	0e 94 7b 00 	call	0xf6	; 0xf6 <start>
     32c:	88 e7       	ldi	r24, 0x78	; 120
     32e:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     332:	80 e4       	ldi	r24, 0x40	; 64
     334:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     338:	8c 2f       	mov	r24, r28
     33a:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     33e:	0e 94 83 00 	call	0x106	; 0x106 <stop>
     342:	8f e3       	ldi	r24, 0x3F	; 63
     344:	9f e1       	ldi	r25, 0x1F	; 31
     346:	01 97       	sbiw	r24, 0x01	; 1
     348:	f1 f7       	brne	.-4      	; 0x346 <ssd_write+0x22>
     34a:	00 c0       	rjmp	.+0      	; 0x34c <ssd_write+0x28>
     34c:	00 00       	nop
     34e:	8f e3       	ldi	r24, 0x3F	; 63
     350:	9f e1       	ldi	r25, 0x1F	; 31
     352:	01 97       	sbiw	r24, 0x01	; 1
     354:	f1 f7       	brne	.-4      	; 0x352 <ssd_write+0x2e>
     356:	00 c0       	rjmp	.+0      	; 0x358 <ssd_write+0x34>
     358:	00 00       	nop
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <set_cursor>:
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	21 e0       	ldi	r18, 0x01	; 1
     364:	88 30       	cpi	r24, 0x08	; 8
     366:	08 f0       	brcs	.+2      	; 0x36a <set_cursor+0xc>
     368:	20 e0       	ldi	r18, 0x00	; 0
     36a:	91 e0       	ldi	r25, 0x01	; 1
     36c:	6f 37       	cpi	r22, 0x7F	; 127
     36e:	08 f0       	brcs	.+2      	; 0x372 <set_cursor+0x14>
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	92 23       	and	r25, r18
     374:	e1 f0       	breq	.+56     	; 0x3ae <set_cursor+0x50>
     376:	d6 2f       	mov	r29, r22
     378:	c8 2f       	mov	r28, r24
     37a:	81 e2       	ldi	r24, 0x21	; 33
     37c:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     380:	8d 2f       	mov	r24, r29
     382:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     386:	8f e7       	ldi	r24, 0x7F	; 127
     388:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     38c:	82 e2       	ldi	r24, 0x22	; 34
     38e:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     392:	8c 2f       	mov	r24, r28
     394:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     398:	87 e0       	ldi	r24, 0x07	; 7
     39a:	0e 94 2b 01 	call	0x256	; 0x256 <ssd_i2c_cmd>
     39e:	0e 94 7b 00 	call	0xf6	; 0xf6 <start>
     3a2:	88 e7       	ldi	r24, 0x78	; 120
     3a4:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     3a8:	80 e4       	ldi	r24, 0x40	; 64
     3aa:	0e 94 8d 00 	call	0x11a	; 0x11a <write_i2c>
     3ae:	df 91       	pop	r29
     3b0:	cf 91       	pop	r28
     3b2:	08 95       	ret

000003b4 <ssd_num_write>:
     3b4:	cf 93       	push	r28
     3b6:	c8 2f       	mov	r28, r24
     3b8:	41 15       	cp	r20, r1
     3ba:	51 05       	cpc	r21, r1
     3bc:	f9 f4       	brne	.+62     	; 0x3fc <ssd_num_write+0x48>
     3be:	61 30       	cpi	r22, 0x01	; 1
     3c0:	41 f4       	brne	.+16     	; 0x3d2 <ssd_num_write+0x1e>
     3c2:	69 e1       	ldi	r22, 0x19	; 25
     3c4:	82 e0       	ldi	r24, 0x02	; 2
     3c6:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     3ca:	80 e0       	ldi	r24, 0x00	; 0
     3cc:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     3d0:	56 c0       	rjmp	.+172    	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     3d2:	62 30       	cpi	r22, 0x02	; 2
     3d4:	41 f4       	brne	.+16     	; 0x3e6 <ssd_num_write+0x32>
     3d6:	66 e2       	ldi	r22, 0x26	; 38
     3d8:	83 e0       	ldi	r24, 0x03	; 3
     3da:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     3e4:	4c c0       	rjmp	.+152    	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     3e6:	63 30       	cpi	r22, 0x03	; 3
     3e8:	09 f0       	breq	.+2      	; 0x3ec <ssd_num_write+0x38>
     3ea:	49 c0       	rjmp	.+146    	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     3ec:	60 e2       	ldi	r22, 0x20	; 32
     3ee:	84 e0       	ldi	r24, 0x04	; 4
     3f0:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     3f4:	80 e0       	ldi	r24, 0x00	; 0
     3f6:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     3fa:	41 c0       	rjmp	.+130    	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     3fc:	41 30       	cpi	r20, 0x01	; 1
     3fe:	51 05       	cpc	r21, r1
     400:	f1 f4       	brne	.+60     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
     402:	61 30       	cpi	r22, 0x01	; 1
     404:	41 f4       	brne	.+16     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     406:	6f e1       	ldi	r22, 0x1F	; 31
     408:	82 e0       	ldi	r24, 0x02	; 2
     40a:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     40e:	80 e0       	ldi	r24, 0x00	; 0
     410:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     414:	34 c0       	rjmp	.+104    	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     416:	62 30       	cpi	r22, 0x02	; 2
     418:	41 f4       	brne	.+16     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     41a:	6c e2       	ldi	r22, 0x2C	; 44
     41c:	83 e0       	ldi	r24, 0x03	; 3
     41e:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     422:	80 e0       	ldi	r24, 0x00	; 0
     424:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     428:	2a c0       	rjmp	.+84     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     42a:	63 30       	cpi	r22, 0x03	; 3
     42c:	41 f5       	brne	.+80     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     42e:	66 e2       	ldi	r22, 0x26	; 38
     430:	84 e0       	ldi	r24, 0x04	; 4
     432:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     436:	80 e0       	ldi	r24, 0x00	; 0
     438:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     43c:	20 c0       	rjmp	.+64     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     43e:	42 30       	cpi	r20, 0x02	; 2
     440:	51 05       	cpc	r21, r1
     442:	e9 f4       	brne	.+58     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     444:	61 30       	cpi	r22, 0x01	; 1
     446:	41 f4       	brne	.+16     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     448:	65 e2       	ldi	r22, 0x25	; 37
     44a:	82 e0       	ldi	r24, 0x02	; 2
     44c:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     456:	13 c0       	rjmp	.+38     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     458:	62 30       	cpi	r22, 0x02	; 2
     45a:	41 f4       	brne	.+16     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
     45c:	62 e3       	ldi	r22, 0x32	; 50
     45e:	83 e0       	ldi	r24, 0x03	; 3
     460:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     464:	80 e0       	ldi	r24, 0x00	; 0
     466:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     46a:	09 c0       	rjmp	.+18     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     46c:	63 30       	cpi	r22, 0x03	; 3
     46e:	39 f4       	brne	.+14     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     470:	6c e2       	ldi	r22, 0x2C	; 44
     472:	84 e0       	ldi	r24, 0x04	; 4
     474:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     478:	80 e0       	ldi	r24, 0x00	; 0
     47a:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     47e:	8c 2f       	mov	r24, r28
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	fc 01       	movw	r30, r24
     484:	be 97       	sbiw	r30, 0x2e	; 46
     486:	ec 30       	cpi	r30, 0x0C	; 12
     488:	f1 05       	cpc	r31, r1
     48a:	08 f0       	brcs	.+2      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
     48c:	92 c0       	rjmp	.+292    	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     48e:	ec 5c       	subi	r30, 0xCC	; 204
     490:	ff 4f       	sbci	r31, 0xFF	; 255
     492:	0c 94 a4 08 	jmp	0x1148	; 0x1148 <__tablejump2__>
     496:	ec 2f       	mov	r30, r28
     498:	f0 e0       	ldi	r31, 0x00	; 0
     49a:	e4 50       	subi	r30, 0x04	; 4
     49c:	fe 4f       	sbci	r31, 0xFE	; 254
     49e:	80 81       	ld	r24, Z
     4a0:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     4a4:	cf 5f       	subi	r28, 0xFF	; 255
     4a6:	01 c0       	rjmp	.+2      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
     4a8:	c0 e0       	ldi	r28, 0x00	; 0
     4aa:	c6 30       	cpi	r28, 0x06	; 6
     4ac:	a0 f3       	brcs	.-24     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
     4ae:	81 c0       	rjmp	.+258    	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     4b0:	ec 2f       	mov	r30, r28
     4b2:	f0 e0       	ldi	r31, 0x00	; 0
     4b4:	ea 50       	subi	r30, 0x0A	; 10
     4b6:	fe 4f       	sbci	r31, 0xFE	; 254
     4b8:	80 81       	ld	r24, Z
     4ba:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     4be:	cf 5f       	subi	r28, 0xFF	; 255
     4c0:	01 c0       	rjmp	.+2      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
     4c2:	c0 e0       	ldi	r28, 0x00	; 0
     4c4:	c6 30       	cpi	r28, 0x06	; 6
     4c6:	a0 f3       	brcs	.-24     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
     4c8:	74 c0       	rjmp	.+232    	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     4ca:	ec 2f       	mov	r30, r28
     4cc:	f0 e0       	ldi	r31, 0x00	; 0
     4ce:	e0 51       	subi	r30, 0x10	; 16
     4d0:	fe 4f       	sbci	r31, 0xFE	; 254
     4d2:	80 81       	ld	r24, Z
     4d4:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     4d8:	cf 5f       	subi	r28, 0xFF	; 255
     4da:	01 c0       	rjmp	.+2      	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
     4dc:	c0 e0       	ldi	r28, 0x00	; 0
     4de:	c6 30       	cpi	r28, 0x06	; 6
     4e0:	a0 f3       	brcs	.-24     	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
     4e2:	67 c0       	rjmp	.+206    	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     4e4:	ec 2f       	mov	r30, r28
     4e6:	f0 e0       	ldi	r31, 0x00	; 0
     4e8:	e6 51       	subi	r30, 0x16	; 22
     4ea:	fe 4f       	sbci	r31, 0xFE	; 254
     4ec:	80 81       	ld	r24, Z
     4ee:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     4f2:	cf 5f       	subi	r28, 0xFF	; 255
     4f4:	01 c0       	rjmp	.+2      	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
     4f6:	c0 e0       	ldi	r28, 0x00	; 0
     4f8:	c6 30       	cpi	r28, 0x06	; 6
     4fa:	a0 f3       	brcs	.-24     	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
     4fc:	5a c0       	rjmp	.+180    	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     4fe:	ec 2f       	mov	r30, r28
     500:	f0 e0       	ldi	r31, 0x00	; 0
     502:	ec 51       	subi	r30, 0x1C	; 28
     504:	fe 4f       	sbci	r31, 0xFE	; 254
     506:	80 81       	ld	r24, Z
     508:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     50c:	cf 5f       	subi	r28, 0xFF	; 255
     50e:	01 c0       	rjmp	.+2      	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
     510:	c0 e0       	ldi	r28, 0x00	; 0
     512:	c6 30       	cpi	r28, 0x06	; 6
     514:	a0 f3       	brcs	.-24     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
     516:	4d c0       	rjmp	.+154    	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     518:	ec 2f       	mov	r30, r28
     51a:	f0 e0       	ldi	r31, 0x00	; 0
     51c:	e2 52       	subi	r30, 0x22	; 34
     51e:	fe 4f       	sbci	r31, 0xFE	; 254
     520:	80 81       	ld	r24, Z
     522:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     526:	cf 5f       	subi	r28, 0xFF	; 255
     528:	01 c0       	rjmp	.+2      	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
     52a:	c0 e0       	ldi	r28, 0x00	; 0
     52c:	c6 30       	cpi	r28, 0x06	; 6
     52e:	a0 f3       	brcs	.-24     	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
     530:	40 c0       	rjmp	.+128    	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     532:	ec 2f       	mov	r30, r28
     534:	f0 e0       	ldi	r31, 0x00	; 0
     536:	e8 52       	subi	r30, 0x28	; 40
     538:	fe 4f       	sbci	r31, 0xFE	; 254
     53a:	80 81       	ld	r24, Z
     53c:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     540:	cf 5f       	subi	r28, 0xFF	; 255
     542:	01 c0       	rjmp	.+2      	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
     544:	c0 e0       	ldi	r28, 0x00	; 0
     546:	c6 30       	cpi	r28, 0x06	; 6
     548:	a0 f3       	brcs	.-24     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
     54a:	33 c0       	rjmp	.+102    	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     54c:	ec 2f       	mov	r30, r28
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	ee 52       	subi	r30, 0x2E	; 46
     552:	fe 4f       	sbci	r31, 0xFE	; 254
     554:	80 81       	ld	r24, Z
     556:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     55a:	cf 5f       	subi	r28, 0xFF	; 255
     55c:	01 c0       	rjmp	.+2      	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
     55e:	c0 e0       	ldi	r28, 0x00	; 0
     560:	c6 30       	cpi	r28, 0x06	; 6
     562:	a0 f3       	brcs	.-24     	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
     564:	26 c0       	rjmp	.+76     	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     566:	ec 2f       	mov	r30, r28
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	e4 53       	subi	r30, 0x34	; 52
     56c:	fe 4f       	sbci	r31, 0xFE	; 254
     56e:	80 81       	ld	r24, Z
     570:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     574:	cf 5f       	subi	r28, 0xFF	; 255
     576:	01 c0       	rjmp	.+2      	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
     578:	c0 e0       	ldi	r28, 0x00	; 0
     57a:	c6 30       	cpi	r28, 0x06	; 6
     57c:	a0 f3       	brcs	.-24     	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
     57e:	19 c0       	rjmp	.+50     	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     580:	ec 2f       	mov	r30, r28
     582:	f0 e0       	ldi	r31, 0x00	; 0
     584:	ea 53       	subi	r30, 0x3A	; 58
     586:	fe 4f       	sbci	r31, 0xFE	; 254
     588:	80 81       	ld	r24, Z
     58a:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     58e:	cf 5f       	subi	r28, 0xFF	; 255
     590:	01 c0       	rjmp	.+2      	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
     592:	c0 e0       	ldi	r28, 0x00	; 0
     594:	c6 30       	cpi	r28, 0x06	; 6
     596:	a0 f3       	brcs	.-24     	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
     598:	0c c0       	rjmp	.+24     	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     59a:	ec 2f       	mov	r30, r28
     59c:	f0 e0       	ldi	r31, 0x00	; 0
     59e:	e0 54       	subi	r30, 0x40	; 64
     5a0:	fe 4f       	sbci	r31, 0xFE	; 254
     5a2:	80 81       	ld	r24, Z
     5a4:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
     5a8:	cf 5f       	subi	r28, 0xFF	; 255
     5aa:	01 c0       	rjmp	.+2      	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
     5ac:	c0 e0       	ldi	r28, 0x00	; 0
     5ae:	c6 30       	cpi	r28, 0x06	; 6
     5b0:	a0 f3       	brcs	.-24     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
     5b2:	cf 91       	pop	r28
     5b4:	08 95       	ret

000005b6 <clear_screen>:

void clear_screen(void){
     5b6:	0f 93       	push	r16
     5b8:	1f 93       	push	r17
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
	for(int i=0; i<=7; i++){
     5be:	00 e0       	ldi	r16, 0x00	; 0
     5c0:	10 e0       	ldi	r17, 0x00	; 0
     5c2:	10 c0       	rjmp	.+32     	; 0x5e4 <clear_screen+0x2e>
		set_cursor(i,0);
     5c4:	60 e0       	ldi	r22, 0x00	; 0
     5c6:	80 2f       	mov	r24, r16
     5c8:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
		for(int j=0;j<=127;j++){
     5cc:	c0 e0       	ldi	r28, 0x00	; 0
     5ce:	d0 e0       	ldi	r29, 0x00	; 0
     5d0:	04 c0       	rjmp	.+8      	; 0x5da <clear_screen+0x24>
			ssd_write(0x00);
     5d2:	80 e0       	ldi	r24, 0x00	; 0
     5d4:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
}

void clear_screen(void){
	for(int i=0; i<=7; i++){
		set_cursor(i,0);
		for(int j=0;j<=127;j++){
     5d8:	21 96       	adiw	r28, 0x01	; 1
     5da:	c0 38       	cpi	r28, 0x80	; 128
     5dc:	d1 05       	cpc	r29, r1
     5de:	cc f3       	brlt	.-14     	; 0x5d2 <clear_screen+0x1c>
	}

}

void clear_screen(void){
	for(int i=0; i<=7; i++){
     5e0:	0f 5f       	subi	r16, 0xFF	; 255
     5e2:	1f 4f       	sbci	r17, 0xFF	; 255
     5e4:	08 30       	cpi	r16, 0x08	; 8
     5e6:	11 05       	cpc	r17, r1
     5e8:	6c f3       	brlt	.-38     	; 0x5c4 <clear_screen+0xe>
		set_cursor(i,0);
		for(int j=0;j<=127;j++){
			ssd_write(0x00);
		}
	}
}
     5ea:	df 91       	pop	r29
     5ec:	cf 91       	pop	r28
     5ee:	1f 91       	pop	r17
     5f0:	0f 91       	pop	r16
     5f2:	08 95       	ret

000005f4 <write_lcd_state>:
	0x01, 0x01, 0x7F, 0x01, 0x01,0x00,  // T
	0x7F, 0x49, 0x49, 0x49, 0x41,0x00   // E
};


void write_lcd_state(char data){
     5f4:	cf 93       	push	r28
     5f6:	df 93       	push	r29
	
	
	switch(data){
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	fc 01       	movw	r30, r24
     5fc:	31 97       	sbiw	r30, 0x01	; 1
     5fe:	e7 30       	cpi	r30, 0x07	; 7
     600:	f1 05       	cpc	r31, r1
     602:	08 f0       	brcs	.+2      	; 0x606 <write_lcd_state+0x12>
     604:	7e c0       	rjmp	.+252    	; 0x702 <write_lcd_state+0x10e>
     606:	e0 5c       	subi	r30, 0xC0	; 192
     608:	ff 4f       	sbci	r31, 0xFF	; 255
     60a:	0c 94 a4 08 	jmp	0x1148	; 0x1148 <__tablejump2__>
		case 3:
		set_cursor(6,0);
     60e:	60 e0       	ldi	r22, 0x00	; 0
     610:	86 e0       	ldi	r24, 0x06	; 6
     612:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
		for( int i = 0; i < 30; i++){
     616:	c0 e0       	ldi	r28, 0x00	; 0
     618:	d0 e0       	ldi	r29, 0x00	; 0
     61a:	07 c0       	rjmp	.+14     	; 0x62a <write_lcd_state+0x36>
			ssd_write(blue[i]);
     61c:	fe 01       	movw	r30, r28
     61e:	e8 55       	subi	r30, 0x58	; 88
     620:	fe 4f       	sbci	r31, 0xFE	; 254
     622:	80 81       	ld	r24, Z
     624:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
	
	
	switch(data){
		case 3:
		set_cursor(6,0);
		for( int i = 0; i < 30; i++){
     628:	21 96       	adiw	r28, 0x01	; 1
     62a:	ce 31       	cpi	r28, 0x1E	; 30
     62c:	d1 05       	cpc	r29, r1
     62e:	b4 f3       	brlt	.-20     	; 0x61c <write_lcd_state+0x28>
     630:	68 c0       	rjmp	.+208    	; 0x702 <write_lcd_state+0x10e>
			ssd_write(blue[i]);
		}
		break; 
		
		case 1:
		set_cursor(6,0);
     632:	60 e0       	ldi	r22, 0x00	; 0
     634:	86 e0       	ldi	r24, 0x06	; 6
     636:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
		for( int j = 0; j < 18; j++){
     63a:	c0 e0       	ldi	r28, 0x00	; 0
     63c:	d0 e0       	ldi	r29, 0x00	; 0
     63e:	07 c0       	rjmp	.+14     	; 0x64e <write_lcd_state+0x5a>
			ssd_write(red[j]);
     640:	fe 01       	movw	r30, r28
     642:	ea 56       	subi	r30, 0x6A	; 106
     644:	fe 4f       	sbci	r31, 0xFE	; 254
     646:	80 81       	ld	r24, Z
     648:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
		}
		break; 
		
		case 1:
		set_cursor(6,0);
		for( int j = 0; j < 18; j++){
     64c:	21 96       	adiw	r28, 0x01	; 1
     64e:	c2 31       	cpi	r28, 0x12	; 18
     650:	d1 05       	cpc	r29, r1
     652:	b4 f3       	brlt	.-20     	; 0x640 <write_lcd_state+0x4c>
     654:	56 c0       	rjmp	.+172    	; 0x702 <write_lcd_state+0x10e>
			ssd_write(red[j]);
		}
		break;
		
		case 2:
		set_cursor(6,0);
     656:	60 e0       	ldi	r22, 0x00	; 0
     658:	86 e0       	ldi	r24, 0x06	; 6
     65a:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
		for( int k = 0; k < 30; k++){
     65e:	c0 e0       	ldi	r28, 0x00	; 0
     660:	d0 e0       	ldi	r29, 0x00	; 0
     662:	07 c0       	rjmp	.+14     	; 0x672 <write_lcd_state+0x7e>
			ssd_write(green[k]);
     664:	fe 01       	movw	r30, r28
     666:	e8 58       	subi	r30, 0x88	; 136
     668:	fe 4f       	sbci	r31, 0xFE	; 254
     66a:	80 81       	ld	r24, Z
     66c:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
		}
		break;
		
		case 2:
		set_cursor(6,0);
		for( int k = 0; k < 30; k++){
     670:	21 96       	adiw	r28, 0x01	; 1
     672:	ce 31       	cpi	r28, 0x1E	; 30
     674:	d1 05       	cpc	r29, r1
     676:	b4 f3       	brlt	.-20     	; 0x664 <write_lcd_state+0x70>
     678:	44 c0       	rjmp	.+136    	; 0x702 <write_lcd_state+0x10e>
			ssd_write(green[k]);
		}
		break;
		
		case 5:
		set_cursor(6,0);
     67a:	60 e0       	ldi	r22, 0x00	; 0
     67c:	86 e0       	ldi	r24, 0x06	; 6
     67e:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
		for( int y = 0; y < 36; y++){
     682:	c0 e0       	ldi	r28, 0x00	; 0
     684:	d0 e0       	ldi	r29, 0x00	; 0
     686:	07 c0       	rjmp	.+14     	; 0x696 <write_lcd_state+0xa2>
			ssd_write(yellow[y]);
     688:	fe 01       	movw	r30, r28
     68a:	ec 5a       	subi	r30, 0xAC	; 172
     68c:	fe 4f       	sbci	r31, 0xFE	; 254
     68e:	80 81       	ld	r24, Z
     690:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
		}
		break;
		
		case 5:
		set_cursor(6,0);
		for( int y = 0; y < 36; y++){
     694:	21 96       	adiw	r28, 0x01	; 1
     696:	c4 32       	cpi	r28, 0x24	; 36
     698:	d1 05       	cpc	r29, r1
     69a:	b4 f3       	brlt	.-20     	; 0x688 <write_lcd_state+0x94>
     69c:	32 c0       	rjmp	.+100    	; 0x702 <write_lcd_state+0x10e>
			ssd_write(yellow[y]);
		}
		break;
		
		case 4:
		set_cursor(6,0);
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	86 e0       	ldi	r24, 0x06	; 6
     6a2:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
		for( int p = 0; p < 36; p++){
     6a6:	c0 e0       	ldi	r28, 0x00	; 0
     6a8:	d0 e0       	ldi	r29, 0x00	; 0
     6aa:	07 c0       	rjmp	.+14     	; 0x6ba <write_lcd_state+0xc6>
			ssd_write(purple[p]);
     6ac:	fe 01       	movw	r30, r28
     6ae:	e0 5d       	subi	r30, 0xD0	; 208
     6b0:	fe 4f       	sbci	r31, 0xFE	; 254
     6b2:	80 81       	ld	r24, Z
     6b4:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
		}
		break;
		
		case 4:
		set_cursor(6,0);
		for( int p = 0; p < 36; p++){
     6b8:	21 96       	adiw	r28, 0x01	; 1
     6ba:	c4 32       	cpi	r28, 0x24	; 36
     6bc:	d1 05       	cpc	r29, r1
     6be:	b4 f3       	brlt	.-20     	; 0x6ac <write_lcd_state+0xb8>
     6c0:	20 c0       	rjmp	.+64     	; 0x702 <write_lcd_state+0x10e>
			ssd_write(purple[p]);
		}
		break;
		
		case 6:
		set_cursor(6,0);
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	86 e0       	ldi	r24, 0x06	; 6
     6c6:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
		for(int d = 0; d < 42 ;d++){
     6ca:	c0 e0       	ldi	r28, 0x00	; 0
     6cc:	d0 e0       	ldi	r29, 0x00	; 0
     6ce:	07 c0       	rjmp	.+14     	; 0x6de <write_lcd_state+0xea>
			ssd_write(celeste[d]);
     6d0:	fe 01       	movw	r30, r28
     6d2:	ea 5f       	subi	r30, 0xFA	; 250
     6d4:	fe 4f       	sbci	r31, 0xFE	; 254
     6d6:	80 81       	ld	r24, Z
     6d8:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
		}
		break;
		
		case 6:
		set_cursor(6,0);
		for(int d = 0; d < 42 ;d++){
     6dc:	21 96       	adiw	r28, 0x01	; 1
     6de:	ca 32       	cpi	r28, 0x2A	; 42
     6e0:	d1 05       	cpc	r29, r1
     6e2:	b4 f3       	brlt	.-20     	; 0x6d0 <write_lcd_state+0xdc>
     6e4:	0e c0       	rjmp	.+28     	; 0x702 <write_lcd_state+0x10e>
			ssd_write(celeste[d]);
		}
		break;
		
		case 7: 
		set_cursor(6,0); //Clear 
     6e6:	60 e0       	ldi	r22, 0x00	; 0
     6e8:	86 e0       	ldi	r24, 0x06	; 6
     6ea:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
		for(int v = 0; v < 42 ;v++){
     6ee:	c0 e0       	ldi	r28, 0x00	; 0
     6f0:	d0 e0       	ldi	r29, 0x00	; 0
     6f2:	04 c0       	rjmp	.+8      	; 0x6fc <write_lcd_state+0x108>
			ssd_write(0x00);
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
		}
		break;
		
		case 7: 
		set_cursor(6,0); //Clear 
		for(int v = 0; v < 42 ;v++){
     6fa:	21 96       	adiw	r28, 0x01	; 1
     6fc:	ca 32       	cpi	r28, 0x2A	; 42
     6fe:	d1 05       	cpc	r29, r1
     700:	cc f3       	brlt	.-14     	; 0x6f4 <write_lcd_state+0x100>
		
		default:
		break;
		
	}
}
     702:	df 91       	pop	r29
     704:	cf 91       	pop	r28
     706:	08 95       	ret

00000708 <write_led>:
const unsigned char equal[] = {
	0x14, 0x14, 0x14, 0x14, 0x14,0x00   // =
};


void write_led(void){
     708:	cf 93       	push	r28
	unsigned char j,i;
	set_cursor(2,0);
     70a:	60 e0       	ldi	r22, 0x00	; 0
     70c:	82 e0       	ldi	r24, 0x02	; 2
     70e:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
	for( i = 0; i < 18 ; i++){
     712:	c0 e0       	ldi	r28, 0x00	; 0
     714:	08 c0       	rjmp	.+16     	; 0x726 <write_led+0x1e>
		ssd_write(red[i]);
     716:	ec 2f       	mov	r30, r28
     718:	f0 e0       	ldi	r31, 0x00	; 0
     71a:	ea 56       	subi	r30, 0x6A	; 106
     71c:	fe 4f       	sbci	r31, 0xFE	; 254
     71e:	80 81       	ld	r24, Z
     720:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>


void write_led(void){
	unsigned char j,i;
	set_cursor(2,0);
	for( i = 0; i < 18 ; i++){
     724:	cf 5f       	subi	r28, 0xFF	; 255
     726:	c2 31       	cpi	r28, 0x12	; 18
     728:	b0 f3       	brcs	.-20     	; 0x716 <write_led+0xe>
     72a:	c0 e0       	ldi	r28, 0x00	; 0
     72c:	08 c0       	rjmp	.+16     	; 0x73e <write_led+0x36>
		ssd_write(red[i]);
	}
	for( j = 0; j < 6 ; j++){
		ssd_write(equal[j]);
     72e:	ec 2f       	mov	r30, r28
     730:	f0 e0       	ldi	r31, 0x00	; 0
     732:	e0 50       	subi	r30, 0x00	; 0
     734:	ff 4f       	sbci	r31, 0xFF	; 255
     736:	80 81       	ld	r24, Z
     738:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
	unsigned char j,i;
	set_cursor(2,0);
	for( i = 0; i < 18 ; i++){
		ssd_write(red[i]);
	}
	for( j = 0; j < 6 ; j++){
     73c:	cf 5f       	subi	r28, 0xFF	; 255
     73e:	c6 30       	cpi	r28, 0x06	; 6
     740:	b0 f3       	brcs	.-20     	; 0x72e <write_led+0x26>
		ssd_write(equal[j]);
	}

	set_cursor(3,0);
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	83 e0       	ldi	r24, 0x03	; 3
     746:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
	for(  i = 0; i < 30 ; i++){
     74a:	c0 e0       	ldi	r28, 0x00	; 0
     74c:	08 c0       	rjmp	.+16     	; 0x75e <write_led+0x56>
		ssd_write(green[i]);
     74e:	ec 2f       	mov	r30, r28
     750:	f0 e0       	ldi	r31, 0x00	; 0
     752:	e8 58       	subi	r30, 0x88	; 136
     754:	fe 4f       	sbci	r31, 0xFE	; 254
     756:	80 81       	ld	r24, Z
     758:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
	for( j = 0; j < 6 ; j++){
		ssd_write(equal[j]);
	}

	set_cursor(3,0);
	for(  i = 0; i < 30 ; i++){
     75c:	cf 5f       	subi	r28, 0xFF	; 255
     75e:	ce 31       	cpi	r28, 0x1E	; 30
     760:	b0 f3       	brcs	.-20     	; 0x74e <write_led+0x46>
     762:	c0 e0       	ldi	r28, 0x00	; 0
     764:	08 c0       	rjmp	.+16     	; 0x776 <write_led+0x6e>
		ssd_write(green[i]);
	}
	for( j = 0; j < 6 ; j++){
		ssd_write(equal[j]);
     766:	ec 2f       	mov	r30, r28
     768:	f0 e0       	ldi	r31, 0x00	; 0
     76a:	e0 50       	subi	r30, 0x00	; 0
     76c:	ff 4f       	sbci	r31, 0xFF	; 255
     76e:	80 81       	ld	r24, Z
     770:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>

	set_cursor(3,0);
	for(  i = 0; i < 30 ; i++){
		ssd_write(green[i]);
	}
	for( j = 0; j < 6 ; j++){
     774:	cf 5f       	subi	r28, 0xFF	; 255
     776:	c6 30       	cpi	r28, 0x06	; 6
     778:	b0 f3       	brcs	.-20     	; 0x766 <write_led+0x5e>
		ssd_write(equal[j]);
	}

	set_cursor(4,0);
     77a:	60 e0       	ldi	r22, 0x00	; 0
     77c:	84 e0       	ldi	r24, 0x04	; 4
     77e:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
	for( i = 0; i < 24 ; i++){
     782:	c0 e0       	ldi	r28, 0x00	; 0
     784:	08 c0       	rjmp	.+16     	; 0x796 <write_led+0x8e>
		ssd_write(blue[i]);
     786:	ec 2f       	mov	r30, r28
     788:	f0 e0       	ldi	r31, 0x00	; 0
     78a:	e8 55       	subi	r30, 0x58	; 88
     78c:	fe 4f       	sbci	r31, 0xFE	; 254
     78e:	80 81       	ld	r24, Z
     790:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
	for( j = 0; j < 6 ; j++){
		ssd_write(equal[j]);
	}

	set_cursor(4,0);
	for( i = 0; i < 24 ; i++){
     794:	cf 5f       	subi	r28, 0xFF	; 255
     796:	c8 31       	cpi	r28, 0x18	; 24
     798:	b0 f3       	brcs	.-20     	; 0x786 <write_led+0x7e>
     79a:	c0 e0       	ldi	r28, 0x00	; 0
     79c:	08 c0       	rjmp	.+16     	; 0x7ae <write_led+0xa6>
		ssd_write(blue[i]);
	}
	for( j = 0; j < 6 ; j++){
		ssd_write(equal[j]);
     79e:	ec 2f       	mov	r30, r28
     7a0:	f0 e0       	ldi	r31, 0x00	; 0
     7a2:	e0 50       	subi	r30, 0x00	; 0
     7a4:	ff 4f       	sbci	r31, 0xFF	; 255
     7a6:	80 81       	ld	r24, Z
     7a8:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>

	set_cursor(4,0);
	for( i = 0; i < 24 ; i++){
		ssd_write(blue[i]);
	}
	for( j = 0; j < 6 ; j++){
     7ac:	cf 5f       	subi	r28, 0xFF	; 255
     7ae:	c6 30       	cpi	r28, 0x06	; 6
     7b0:	b0 f3       	brcs	.-20     	; 0x79e <write_led+0x96>
		ssd_write(equal[j]);
	}

}
     7b2:	cf 91       	pop	r28
     7b4:	08 95       	ret

000007b6 <ssd_num_write_data>:

void ssd_num_write_data(char *dato, int position){
     7b6:	0f 93       	push	r16
     7b8:	1f 93       	push	r17
     7ba:	cf 93       	push	r28
     7bc:	df 93       	push	r29
     7be:	8c 01       	movw	r16, r24
	// This function simply changes the writing position of the voltage to be displayed on each adc
	char i; 
	if(position == 1){
     7c0:	61 30       	cpi	r22, 0x01	; 1
     7c2:	71 05       	cpc	r23, r1
     7c4:	29 f4       	brne	.+10     	; 0x7d0 <ssd_num_write_data+0x1a>
	set_cursor(2,25);
     7c6:	69 e1       	ldi	r22, 0x19	; 25
     7c8:	82 e0       	ldi	r24, 0x02	; 2
     7ca:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     7ce:	0f c0       	rjmp	.+30     	; 0x7ee <ssd_num_write_data+0x38>
	}
	else if (position == 2)
     7d0:	62 30       	cpi	r22, 0x02	; 2
     7d2:	71 05       	cpc	r23, r1
     7d4:	29 f4       	brne	.+10     	; 0x7e0 <ssd_num_write_data+0x2a>
	{
	set_cursor(3,38);	
     7d6:	66 e2       	ldi	r22, 0x26	; 38
     7d8:	83 e0       	ldi	r24, 0x03	; 3
     7da:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
     7de:	07 c0       	rjmp	.+14     	; 0x7ee <ssd_num_write_data+0x38>
	}
	else if (position == 3)
     7e0:	63 30       	cpi	r22, 0x03	; 3
     7e2:	71 05       	cpc	r23, r1
     7e4:	21 f4       	brne	.+8      	; 0x7ee <ssd_num_write_data+0x38>
	{
	set_cursor(4,32);
     7e6:	60 e2       	ldi	r22, 0x20	; 32
     7e8:	84 e0       	ldi	r24, 0x04	; 4
     7ea:	0e 94 af 01 	call	0x35e	; 0x35e <set_cursor>
	}
	
	
	ssd_write(0x00);
     7ee:	80 e0       	ldi	r24, 0x00	; 0
     7f0:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
	for(i=0; i<3; i++){
     7f4:	c0 e0       	ldi	r28, 0x00	; 0
     7f6:	9f c0       	rjmp	.+318    	; 0x936 <__stack+0x37>
		switch(dato[i]){
     7f8:	f8 01       	movw	r30, r16
     7fa:	ec 0f       	add	r30, r28
     7fc:	f1 1d       	adc	r31, r1
     7fe:	e0 81       	ld	r30, Z
     800:	8e 2f       	mov	r24, r30
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	fc 01       	movw	r30, r24
     806:	be 97       	sbiw	r30, 0x2e	; 46
     808:	ec 30       	cpi	r30, 0x0C	; 12
     80a:	f1 05       	cpc	r31, r1
     80c:	08 f0       	brcs	.+2      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
     80e:	92 c0       	rjmp	.+292    	; 0x934 <__stack+0x35>
     810:	e9 5b       	subi	r30, 0xB9	; 185
     812:	ff 4f       	sbci	r31, 0xFF	; 255
     814:	0c 94 a4 08 	jmp	0x1148	; 0x1148 <__tablejump2__>
			case '0':
			for( char r = 0; r < 6; r++){
				ssd_write(n0[r]);
     818:	ed 2f       	mov	r30, r29
     81a:	f0 e0       	ldi	r31, 0x00	; 0
     81c:	e4 50       	subi	r30, 0x04	; 4
     81e:	fe 4f       	sbci	r31, 0xFE	; 254
     820:	80 81       	ld	r24, Z
     822:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
			case '0':
			for( char r = 0; r < 6; r++){
     826:	df 5f       	subi	r29, 0xFF	; 255
     828:	01 c0       	rjmp	.+2      	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     82a:	d0 e0       	ldi	r29, 0x00	; 0
			case '0':
			for( char r = 0; r < 6; r++){
     82c:	d6 30       	cpi	r29, 0x06	; 6
     82e:	a0 f3       	brcs	.-24     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     830:	81 c0       	rjmp	.+258    	; 0x934 <__stack+0x35>
				ssd_write(n0[r]);
			}
			break;
			case '1':
			for( char r = 0; r < 6; r++){
				ssd_write(n1[r]);
     832:	ed 2f       	mov	r30, r29
     834:	f0 e0       	ldi	r31, 0x00	; 0
     836:	ea 50       	subi	r30, 0x0A	; 10
     838:	fe 4f       	sbci	r31, 0xFE	; 254
     83a:	80 81       	ld	r24, Z
     83c:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
			for( char r = 0; r < 6; r++){
				ssd_write(n0[r]);
			}
			break;
			case '1':
			for( char r = 0; r < 6; r++){
     840:	df 5f       	subi	r29, 0xFF	; 255
     842:	01 c0       	rjmp	.+2      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     844:	d0 e0       	ldi	r29, 0x00	; 0
			for( char r = 0; r < 6; r++){
				ssd_write(n0[r]);
			}
			break;
			case '1':
			for( char r = 0; r < 6; r++){
     846:	d6 30       	cpi	r29, 0x06	; 6
     848:	a0 f3       	brcs	.-24     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
     84a:	74 c0       	rjmp	.+232    	; 0x934 <__stack+0x35>
				ssd_write(n1[r]);
			}
			break;
			case '2':
			for( char r = 0; r < 6; r++){
				ssd_write(n2[r]);
     84c:	ed 2f       	mov	r30, r29
     84e:	f0 e0       	ldi	r31, 0x00	; 0
     850:	e0 51       	subi	r30, 0x10	; 16
     852:	fe 4f       	sbci	r31, 0xFE	; 254
     854:	80 81       	ld	r24, Z
     856:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
			for( char r = 0; r < 6; r++){
				ssd_write(n1[r]);
			}
			break;
			case '2':
			for( char r = 0; r < 6; r++){
     85a:	df 5f       	subi	r29, 0xFF	; 255
     85c:	01 c0       	rjmp	.+2      	; 0x860 <__DATA_REGION_LENGTH__+0x60>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     85e:	d0 e0       	ldi	r29, 0x00	; 0
			for( char r = 0; r < 6; r++){
				ssd_write(n1[r]);
			}
			break;
			case '2':
			for( char r = 0; r < 6; r++){
     860:	d6 30       	cpi	r29, 0x06	; 6
     862:	a0 f3       	brcs	.-24     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
     864:	67 c0       	rjmp	.+206    	; 0x934 <__stack+0x35>
				ssd_write(n2[r]);
			}
			break;
			case '3':
			for( char r = 0; r < 6; r++){
				ssd_write(n3[r]);
     866:	ed 2f       	mov	r30, r29
     868:	f0 e0       	ldi	r31, 0x00	; 0
     86a:	e6 51       	subi	r30, 0x16	; 22
     86c:	fe 4f       	sbci	r31, 0xFE	; 254
     86e:	80 81       	ld	r24, Z
     870:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
			for( char r = 0; r < 6; r++){
				ssd_write(n2[r]);
			}
			break;
			case '3':
			for( char r = 0; r < 6; r++){
     874:	df 5f       	subi	r29, 0xFF	; 255
     876:	01 c0       	rjmp	.+2      	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     878:	d0 e0       	ldi	r29, 0x00	; 0
			for( char r = 0; r < 6; r++){
				ssd_write(n2[r]);
			}
			break;
			case '3':
			for( char r = 0; r < 6; r++){
     87a:	d6 30       	cpi	r29, 0x06	; 6
     87c:	a0 f3       	brcs	.-24     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
     87e:	5a c0       	rjmp	.+180    	; 0x934 <__stack+0x35>
				ssd_write(n3[r]);
			}
			break;
			case '4':
			for( char r = 0; r < 6; r++){
				ssd_write(n4[r]);
     880:	ed 2f       	mov	r30, r29
     882:	f0 e0       	ldi	r31, 0x00	; 0
     884:	ec 51       	subi	r30, 0x1C	; 28
     886:	fe 4f       	sbci	r31, 0xFE	; 254
     888:	80 81       	ld	r24, Z
     88a:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
			for( char r = 0; r < 6; r++){
				ssd_write(n3[r]);
			}
			break;
			case '4':
			for( char r = 0; r < 6; r++){
     88e:	df 5f       	subi	r29, 0xFF	; 255
     890:	01 c0       	rjmp	.+2      	; 0x894 <__DATA_REGION_LENGTH__+0x94>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     892:	d0 e0       	ldi	r29, 0x00	; 0
			for( char r = 0; r < 6; r++){
				ssd_write(n3[r]);
			}
			break;
			case '4':
			for( char r = 0; r < 6; r++){
     894:	d6 30       	cpi	r29, 0x06	; 6
     896:	a0 f3       	brcs	.-24     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
     898:	4d c0       	rjmp	.+154    	; 0x934 <__stack+0x35>
				ssd_write(n4[r]);
			}
			break;
			case '5':
			for( char r = 0; r < 6; r++){
				ssd_write(n5[r]);
     89a:	ed 2f       	mov	r30, r29
     89c:	f0 e0       	ldi	r31, 0x00	; 0
     89e:	e2 52       	subi	r30, 0x22	; 34
     8a0:	fe 4f       	sbci	r31, 0xFE	; 254
     8a2:	80 81       	ld	r24, Z
     8a4:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
			for( char r = 0; r < 6; r++){
				ssd_write(n4[r]);
			}
			break;
			case '5':
			for( char r = 0; r < 6; r++){
     8a8:	df 5f       	subi	r29, 0xFF	; 255
     8aa:	01 c0       	rjmp	.+2      	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     8ac:	d0 e0       	ldi	r29, 0x00	; 0
			for( char r = 0; r < 6; r++){
				ssd_write(n4[r]);
			}
			break;
			case '5':
			for( char r = 0; r < 6; r++){
     8ae:	d6 30       	cpi	r29, 0x06	; 6
     8b0:	a0 f3       	brcs	.-24     	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
     8b2:	40 c0       	rjmp	.+128    	; 0x934 <__stack+0x35>
				ssd_write(n5[r]);
			}
			break;
			case '6':
			for( char r = 0; r < 6; r++){
				ssd_write(n6[r]);
     8b4:	ed 2f       	mov	r30, r29
     8b6:	f0 e0       	ldi	r31, 0x00	; 0
     8b8:	e8 52       	subi	r30, 0x28	; 40
     8ba:	fe 4f       	sbci	r31, 0xFE	; 254
     8bc:	80 81       	ld	r24, Z
     8be:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
			for( char r = 0; r < 6; r++){
				ssd_write(n5[r]);
			}
			break;
			case '6':
			for( char r = 0; r < 6; r++){
     8c2:	df 5f       	subi	r29, 0xFF	; 255
     8c4:	01 c0       	rjmp	.+2      	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     8c6:	d0 e0       	ldi	r29, 0x00	; 0
			for( char r = 0; r < 6; r++){
				ssd_write(n5[r]);
			}
			break;
			case '6':
			for( char r = 0; r < 6; r++){
     8c8:	d6 30       	cpi	r29, 0x06	; 6
     8ca:	a0 f3       	brcs	.-24     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
     8cc:	33 c0       	rjmp	.+102    	; 0x934 <__stack+0x35>
				ssd_write(n6[r]);
			}
			break;
			case '7':
			for( char r = 0; r < 6; r++){
				ssd_write(n7[r]);
     8ce:	ed 2f       	mov	r30, r29
     8d0:	f0 e0       	ldi	r31, 0x00	; 0
     8d2:	ee 52       	subi	r30, 0x2E	; 46
     8d4:	fe 4f       	sbci	r31, 0xFE	; 254
     8d6:	80 81       	ld	r24, Z
     8d8:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
			for( char r = 0; r < 6; r++){
				ssd_write(n6[r]);
			}
			break;
			case '7':
			for( char r = 0; r < 6; r++){
     8dc:	df 5f       	subi	r29, 0xFF	; 255
     8de:	01 c0       	rjmp	.+2      	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     8e0:	d0 e0       	ldi	r29, 0x00	; 0
			for( char r = 0; r < 6; r++){
				ssd_write(n6[r]);
			}
			break;
			case '7':
			for( char r = 0; r < 6; r++){
     8e2:	d6 30       	cpi	r29, 0x06	; 6
     8e4:	a0 f3       	brcs	.-24     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
     8e6:	26 c0       	rjmp	.+76     	; 0x934 <__stack+0x35>
				ssd_write(n7[r]);
			}
			break;
			case '8':
			for( char r = 0; r < 6; r++){
				ssd_write(n8[r]);
     8e8:	ed 2f       	mov	r30, r29
     8ea:	f0 e0       	ldi	r31, 0x00	; 0
     8ec:	e4 53       	subi	r30, 0x34	; 52
     8ee:	fe 4f       	sbci	r31, 0xFE	; 254
     8f0:	80 81       	ld	r24, Z
     8f2:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
			for( char r = 0; r < 6; r++){
				ssd_write(n7[r]);
			}
			break;
			case '8':
			for( char r = 0; r < 6; r++){
     8f6:	df 5f       	subi	r29, 0xFF	; 255
     8f8:	01 c0       	rjmp	.+2      	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     8fa:	d0 e0       	ldi	r29, 0x00	; 0
			for( char r = 0; r < 6; r++){
				ssd_write(n7[r]);
			}
			break;
			case '8':
			for( char r = 0; r < 6; r++){
     8fc:	d6 30       	cpi	r29, 0x06	; 6
     8fe:	a0 f3       	brcs	.-24     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
     900:	19 c0       	rjmp	.+50     	; 0x934 <__stack+0x35>
				ssd_write(n8[r]);
			}
			break;
			case '9':
			for( char r = 0; r < 6; r++){
				ssd_write(n9[r]);
     902:	ed 2f       	mov	r30, r29
     904:	f0 e0       	ldi	r31, 0x00	; 0
     906:	ea 53       	subi	r30, 0x3A	; 58
     908:	fe 4f       	sbci	r31, 0xFE	; 254
     90a:	80 81       	ld	r24, Z
     90c:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
			for( char r = 0; r < 6; r++){
				ssd_write(n8[r]);
			}
			break;
			case '9':
			for( char r = 0; r < 6; r++){
     910:	df 5f       	subi	r29, 0xFF	; 255
     912:	01 c0       	rjmp	.+2      	; 0x916 <__stack+0x17>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     914:	d0 e0       	ldi	r29, 0x00	; 0
			for( char r = 0; r < 6; r++){
				ssd_write(n8[r]);
			}
			break;
			case '9':
			for( char r = 0; r < 6; r++){
     916:	d6 30       	cpi	r29, 0x06	; 6
     918:	a0 f3       	brcs	.-24     	; 0x902 <__stack+0x3>
     91a:	0c c0       	rjmp	.+24     	; 0x934 <__stack+0x35>
				ssd_write(n9[r]);
			}
			break;
			case '.':
			for( char r = 0; r < 6; r++){
				ssd_write(dot[r]);
     91c:	ed 2f       	mov	r30, r29
     91e:	f0 e0       	ldi	r31, 0x00	; 0
     920:	e0 54       	subi	r30, 0x40	; 64
     922:	fe 4f       	sbci	r31, 0xFE	; 254
     924:	80 81       	ld	r24, Z
     926:	0e 94 92 01 	call	0x324	; 0x324 <ssd_write>
			for( char r = 0; r < 6; r++){
				ssd_write(n9[r]);
			}
			break;
			case '.':
			for( char r = 0; r < 6; r++){
     92a:	df 5f       	subi	r29, 0xFF	; 255
     92c:	01 c0       	rjmp	.+2      	; 0x930 <__stack+0x31>
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
		switch(dato[i]){
     92e:	d0 e0       	ldi	r29, 0x00	; 0
			for( char r = 0; r < 6; r++){
				ssd_write(n9[r]);
			}
			break;
			case '.':
			for( char r = 0; r < 6; r++){
     930:	d6 30       	cpi	r29, 0x06	; 6
     932:	a0 f3       	brcs	.-24     	; 0x91c <__stack+0x1d>
	set_cursor(4,32);
	}
	
	
	ssd_write(0x00);
	for(i=0; i<3; i++){
     934:	cf 5f       	subi	r28, 0xFF	; 255
     936:	c3 30       	cpi	r28, 0x03	; 3
     938:	08 f4       	brcc	.+2      	; 0x93c <__stack+0x3d>
     93a:	5e cf       	rjmp	.-324    	; 0x7f8 <ssd_num_write_data+0x42>
			}
			break;
		}
	}
	
}
     93c:	df 91       	pop	r29
     93e:	cf 91       	pop	r28
     940:	1f 91       	pop	r17
     942:	0f 91       	pop	r16
     944:	08 95       	ret

00000946 <__vector_16>:
	while (1)
	{
		if (TCNT1 >= 31999)	
		{
				PORTB ^= 1<<PB5; //PB5 --> output
				TCNT1 = 0;
     946:	1f 92       	push	r1
     948:	0f 92       	push	r0
     94a:	0f b6       	in	r0, 0x3f	; 63
     94c:	0f 92       	push	r0
     94e:	11 24       	eor	r1, r1
     950:	8f 93       	push	r24
     952:	9f 93       	push	r25
     954:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <tot_overflow>
     958:	8f 5f       	subi	r24, 0xFF	; 255
     95a:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <tot_overflow>
     95e:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <tot_overflow>
     962:	8d 37       	cpi	r24, 0x7D	; 125
     964:	30 f0       	brcs	.+12     	; 0x972 <__vector_16+0x2c>
     966:	95 b1       	in	r25, 0x05	; 5
     968:	80 e2       	ldi	r24, 0x20	; 32
     96a:	89 27       	eor	r24, r25
     96c:	85 b9       	out	0x05, r24	; 5
     96e:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <tot_overflow>
     972:	9f 91       	pop	r25
     974:	8f 91       	pop	r24
     976:	0f 90       	pop	r0
     978:	0f be       	out	0x3f, r0	; 63
     97a:	0f 90       	pop	r0
     97c:	1f 90       	pop	r1
     97e:	18 95       	reti

00000980 <__vector_11>:
		}
	}
}
//start Interrupt Service Routine
ISR(TIMER1_COMPA_vect)
{
     980:	1f 92       	push	r1
     982:	0f 92       	push	r0
     984:	0f b6       	in	r0, 0x3f	; 63
     986:	0f 92       	push	r0
     988:	11 24       	eor	r1, r1
     98a:	8f 93       	push	r24
     98c:	9f 93       	push	r25
	PORTB ^= 1<<PB5; //PB5 --> output
     98e:	95 b1       	in	r25, 0x05	; 5
     990:	80 e2       	ldi	r24, 0x20	; 32
     992:	89 27       	eor	r24, r25
     994:	85 b9       	out	0x05, r24	; 5
}
     996:	9f 91       	pop	r25
     998:	8f 91       	pop	r24
     99a:	0f 90       	pop	r0
     99c:	0f be       	out	0x3f, r0	; 63
     99e:	0f 90       	pop	r0
     9a0:	1f 90       	pop	r1
     9a2:	18 95       	reti

000009a4 <__vector_18>:
  while (i < 64)
  {
	  if (s[i] == '\0') break;
	  usart_transmit(s[i++]);
  }
}
     9a4:	1f 92       	push	r1
     9a6:	0f 92       	push	r0
     9a8:	0f b6       	in	r0, 0x3f	; 63
     9aa:	0f 92       	push	r0
     9ac:	11 24       	eor	r1, r1
     9ae:	2f 93       	push	r18
     9b0:	3f 93       	push	r19
     9b2:	4f 93       	push	r20
     9b4:	5f 93       	push	r21
     9b6:	6f 93       	push	r22
     9b8:	7f 93       	push	r23
     9ba:	8f 93       	push	r24
     9bc:	9f 93       	push	r25
     9be:	af 93       	push	r26
     9c0:	bf 93       	push	r27
     9c2:	cf 93       	push	r28
     9c4:	df 93       	push	r29
     9c6:	ef 93       	push	r30
     9c8:	ff 93       	push	r31
     9ca:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     9ce:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <usart_received_char>
     9d2:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     9d6:	87 34       	cpi	r24, 0x47	; 71
     9d8:	61 f0       	breq	.+24     	; 0x9f2 <__vector_18+0x4e>
     9da:	82 35       	cpi	r24, 0x52	; 82
     9dc:	19 f0       	breq	.+6      	; 0x9e4 <__vector_18+0x40>
     9de:	82 34       	cpi	r24, 0x42	; 66
     9e0:	a9 f4       	brne	.+42     	; 0xa0c <__vector_18+0x68>
     9e2:	0e c0       	rjmp	.+28     	; 0xa00 <__vector_18+0x5c>
     9e4:	81 e0       	ldi	r24, 0x01	; 1
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <reception_state+0x1>
     9ec:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <reception_state>
     9f0:	0d c0       	rjmp	.+26     	; 0xa0c <__vector_18+0x68>
     9f2:	82 e0       	ldi	r24, 0x02	; 2
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <reception_state+0x1>
     9fa:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <reception_state>
     9fe:	06 c0       	rjmp	.+12     	; 0xa0c <__vector_18+0x68>
     a00:	83 e0       	ldi	r24, 0x03	; 3
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <reception_state+0x1>
     a08:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <reception_state>
     a0c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     a10:	80 33       	cpi	r24, 0x30	; 48
     a12:	08 f4       	brcc	.+2      	; 0xa16 <__vector_18+0x72>
     a14:	a9 c0       	rjmp	.+338    	; 0xb68 <__vector_18+0x1c4>
     a16:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     a1a:	8a 33       	cpi	r24, 0x3A	; 58
     a1c:	08 f0       	brcs	.+2      	; 0xa20 <__vector_18+0x7c>
     a1e:	a4 c0       	rjmp	.+328    	; 0xb68 <__vector_18+0x1c4>
     a20:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__data_end>
     a24:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__data_end+0x1>
     a28:	89 2b       	or	r24, r25
     a2a:	f9 f4       	brne	.+62     	; 0xa6a <__vector_18+0xc6>
     a2c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     a30:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <a>
     a34:	40 91 26 02 	lds	r20, 0x0226	; 0x800226 <__data_end>
     a38:	50 91 27 02 	lds	r21, 0x0227	; 0x800227 <__data_end+0x1>
     a3c:	60 91 34 02 	lds	r22, 0x0234	; 0x800234 <reception_state>
     a40:	70 91 35 02 	lds	r23, 0x0235	; 0x800235 <reception_state+0x1>
     a44:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <a>
     a48:	0e 94 da 01 	call	0x3b4	; 0x3b4 <ssd_num_write>
     a4c:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <a>
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	c0 97       	sbiw	r24, 0x30	; 48
     a54:	90 93 3e 02 	sts	0x023E, r25	; 0x80023e <ai+0x1>
     a58:	80 93 3d 02 	sts	0x023D, r24	; 0x80023d <ai>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <__data_end+0x1>
     a64:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__data_end>
     a68:	89 c0       	rjmp	.+274    	; 0xb7c <__vector_18+0x1d8>
     a6a:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__data_end>
     a6e:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__data_end+0x1>
     a72:	01 97       	sbiw	r24, 0x01	; 1
     a74:	f9 f4       	brne	.+62     	; 0xab4 <__vector_18+0x110>
     a76:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     a7a:	80 93 39 02 	sts	0x0239, r24	; 0x800239 <b>
     a7e:	40 91 26 02 	lds	r20, 0x0226	; 0x800226 <__data_end>
     a82:	50 91 27 02 	lds	r21, 0x0227	; 0x800227 <__data_end+0x1>
     a86:	60 91 34 02 	lds	r22, 0x0234	; 0x800234 <reception_state>
     a8a:	70 91 35 02 	lds	r23, 0x0235	; 0x800235 <reception_state+0x1>
     a8e:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <b>
     a92:	0e 94 da 01 	call	0x3b4	; 0x3b4 <ssd_num_write>
     a96:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <b>
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	c0 97       	sbiw	r24, 0x30	; 48
     a9e:	90 93 3c 02 	sts	0x023C, r25	; 0x80023c <bi+0x1>
     aa2:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <bi>
     aa6:	82 e0       	ldi	r24, 0x02	; 2
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <__data_end+0x1>
     aae:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__data_end>
     ab2:	64 c0       	rjmp	.+200    	; 0xb7c <__vector_18+0x1d8>
     ab4:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__data_end>
     ab8:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__data_end+0x1>
     abc:	02 97       	sbiw	r24, 0x02	; 2
     abe:	09 f0       	breq	.+2      	; 0xac2 <__vector_18+0x11e>
     ac0:	5d c0       	rjmp	.+186    	; 0xb7c <__vector_18+0x1d8>
     ac2:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     ac6:	80 93 41 02 	sts	0x0241, r24	; 0x800241 <c>
     aca:	80 91 41 02 	lds	r24, 0x0241	; 0x800241 <c>
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	c0 97       	sbiw	r24, 0x30	; 48
     ad2:	90 93 38 02 	sts	0x0238, r25	; 0x800238 <ci+0x1>
     ad6:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <ci>
     ada:	40 91 26 02 	lds	r20, 0x0226	; 0x800226 <__data_end>
     ade:	50 91 27 02 	lds	r21, 0x0227	; 0x800227 <__data_end+0x1>
     ae2:	60 91 34 02 	lds	r22, 0x0234	; 0x800234 <reception_state>
     ae6:	70 91 35 02 	lds	r23, 0x0235	; 0x800235 <reception_state+0x1>
     aea:	80 91 41 02 	lds	r24, 0x0241	; 0x800241 <c>
     aee:	0e 94 da 01 	call	0x3b4	; 0x3b4 <ssd_num_write>
     af2:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <bi>
     af6:	90 91 3c 02 	lds	r25, 0x023C	; 0x80023c <bi+0x1>
     afa:	9c 01       	movw	r18, r24
     afc:	22 0f       	add	r18, r18
     afe:	33 1f       	adc	r19, r19
     b00:	88 0f       	add	r24, r24
     b02:	99 1f       	adc	r25, r25
     b04:	88 0f       	add	r24, r24
     b06:	99 1f       	adc	r25, r25
     b08:	88 0f       	add	r24, r24
     b0a:	99 1f       	adc	r25, r25
     b0c:	82 0f       	add	r24, r18
     b0e:	93 1f       	adc	r25, r19
     b10:	20 91 3d 02 	lds	r18, 0x023D	; 0x80023d <ai>
     b14:	30 91 3e 02 	lds	r19, 0x023E	; 0x80023e <ai+0x1>
     b18:	82 0f       	add	r24, r18
     b1a:	93 1f       	adc	r25, r19
     b1c:	40 91 37 02 	lds	r20, 0x0237	; 0x800237 <ci>
     b20:	50 91 38 02 	lds	r21, 0x0238	; 0x800238 <ci+0x1>
     b24:	64 e6       	ldi	r22, 0x64	; 100
     b26:	64 9f       	mul	r22, r20
     b28:	90 01       	movw	r18, r0
     b2a:	65 9f       	mul	r22, r21
     b2c:	30 0d       	add	r19, r0
     b2e:	11 24       	eor	r1, r1
     b30:	82 0f       	add	r24, r18
     b32:	93 1f       	adc	r25, r19
     b34:	90 93 40 02 	sts	0x0240, r25	; 0x800240 <di+0x1>
     b38:	80 93 3f 02 	sts	0x023F, r24	; 0x80023f <di>
     b3c:	60 91 3f 02 	lds	r22, 0x023F	; 0x80023f <di>
     b40:	70 91 40 02 	lds	r23, 0x0240	; 0x800240 <di+0x1>
     b44:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <reception_state>
     b48:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <reception_state+0x1>
     b4c:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     b50:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <__data_end+0x1>
     b54:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <__data_end>
     b58:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <reception_state+0x1>
     b5c:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <reception_state>
     b60:	87 e0       	ldi	r24, 0x07	; 7
     b62:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     b66:	0a c0       	rjmp	.+20     	; 0xb7c <__vector_18+0x1d8>
     b68:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     b6c:	8a 35       	cpi	r24, 0x5A	; 90
     b6e:	20 f0       	brcs	.+8      	; 0xb78 <__vector_18+0x1d4>
     b70:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     b74:	81 3a       	cpi	r24, 0xA1	; 161
     b76:	10 f0       	brcs	.+4      	; 0xb7c <__vector_18+0x1d8>
     b78:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     b7c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     b80:	85 34       	cpi	r24, 0x45	; 69
     b82:	69 f0       	breq	.+26     	; 0xb9e <__vector_18+0x1fa>
     b84:	82 35       	cpi	r24, 0x52	; 82
     b86:	21 f0       	breq	.+8      	; 0xb90 <__vector_18+0x1ec>
     b88:	84 34       	cpi	r24, 0x44	; 68
     b8a:	09 f0       	breq	.+2      	; 0xb8e <__vector_18+0x1ea>
     b8c:	49 c0       	rjmp	.+146    	; 0xc20 <__vector_18+0x27c>
     b8e:	14 c0       	rjmp	.+40     	; 0xbb8 <__vector_18+0x214>
     b90:	81 e0       	ldi	r24, 0x01	; 1
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <reception_state0+0x1>
     b98:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <reception_state0>
     b9c:	41 c0       	rjmp	.+130    	; 0xc20 <__vector_18+0x27c>
     b9e:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <reception_state0>
     ba2:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <reception_state0+0x1>
     ba6:	01 97       	sbiw	r24, 0x01	; 1
     ba8:	d9 f5       	brne	.+118    	; 0xc20 <__vector_18+0x27c>
     baa:	82 e0       	ldi	r24, 0x02	; 2
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <reception_state0+0x1>
     bb2:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <reception_state0>
     bb6:	34 c0       	rjmp	.+104    	; 0xc20 <__vector_18+0x27c>
     bb8:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <reception_state0>
     bbc:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <reception_state0+0x1>
     bc0:	02 97       	sbiw	r24, 0x02	; 2
     bc2:	71 f5       	brne	.+92     	; 0xc20 <__vector_18+0x27c>
     bc4:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <reception_state0+0x1>
     bc8:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <reception_state0>
     bcc:	6f ef       	ldi	r22, 0xFF	; 255
     bce:	70 e0       	ldi	r23, 0x00	; 0
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     bd8:	60 e0       	ldi	r22, 0x00	; 0
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	82 e0       	ldi	r24, 0x02	; 2
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     be4:	60 e0       	ldi	r22, 0x00	; 0
     be6:	70 e0       	ldi	r23, 0x00	; 0
     be8:	83 e0       	ldi	r24, 0x03	; 3
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     bf0:	61 e0       	ldi	r22, 0x01	; 1
     bf2:	70 e0       	ldi	r23, 0x00	; 0
     bf4:	82 e0       	ldi	r24, 0x02	; 2
     bf6:	92 e0       	ldi	r25, 0x02	; 2
     bf8:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     bfc:	62 e0       	ldi	r22, 0x02	; 2
     bfe:	70 e0       	ldi	r23, 0x00	; 0
     c00:	86 e0       	ldi	r24, 0x06	; 6
     c02:	92 e0       	ldi	r25, 0x02	; 2
     c04:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     c08:	63 e0       	ldi	r22, 0x03	; 3
     c0a:	70 e0       	ldi	r23, 0x00	; 0
     c0c:	86 e0       	ldi	r24, 0x06	; 6
     c0e:	92 e0       	ldi	r25, 0x02	; 2
     c10:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     c14:	87 e0       	ldi	r24, 0x07	; 7
     c16:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     c1a:	81 e0       	ldi	r24, 0x01	; 1
     c1c:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     c20:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     c24:	85 34       	cpi	r24, 0x45	; 69
     c26:	59 f1       	breq	.+86     	; 0xc7e <__vector_18+0x2da>
     c28:	18 f4       	brcc	.+6      	; 0xc30 <__vector_18+0x28c>
     c2a:	82 34       	cpi	r24, 0x42	; 66
     c2c:	31 f0       	breq	.+12     	; 0xc3a <__vector_18+0x296>
     c2e:	5b c0       	rjmp	.+182    	; 0xce6 <__vector_18+0x342>
     c30:	8c 34       	cpi	r24, 0x4C	; 76
     c32:	51 f0       	breq	.+20     	; 0xc48 <__vector_18+0x2a4>
     c34:	85 35       	cpi	r24, 0x55	; 85
     c36:	b1 f0       	breq	.+44     	; 0xc64 <__vector_18+0x2c0>
     c38:	56 c0       	rjmp	.+172    	; 0xce6 <__vector_18+0x342>
     c3a:	81 e0       	ldi	r24, 0x01	; 1
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <reception_state1+0x1>
     c42:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <reception_state1>
     c46:	4f c0       	rjmp	.+158    	; 0xce6 <__vector_18+0x342>
     c48:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <reception_state1>
     c4c:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <reception_state1+0x1>
     c50:	01 97       	sbiw	r24, 0x01	; 1
     c52:	09 f0       	breq	.+2      	; 0xc56 <__vector_18+0x2b2>
     c54:	48 c0       	rjmp	.+144    	; 0xce6 <__vector_18+0x342>
     c56:	82 e0       	ldi	r24, 0x02	; 2
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <reception_state1+0x1>
     c5e:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <reception_state1>
     c62:	41 c0       	rjmp	.+130    	; 0xce6 <__vector_18+0x342>
     c64:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <reception_state1>
     c68:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <reception_state1+0x1>
     c6c:	02 97       	sbiw	r24, 0x02	; 2
     c6e:	d9 f5       	brne	.+118    	; 0xce6 <__vector_18+0x342>
     c70:	83 e0       	ldi	r24, 0x03	; 3
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <reception_state1+0x1>
     c78:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <reception_state1>
     c7c:	34 c0       	rjmp	.+104    	; 0xce6 <__vector_18+0x342>
     c7e:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <reception_state1>
     c82:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <reception_state1+0x1>
     c86:	03 97       	sbiw	r24, 0x03	; 3
     c88:	71 f5       	brne	.+92     	; 0xce6 <__vector_18+0x342>
     c8a:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <reception_state1+0x1>
     c8e:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <reception_state1>
     c92:	60 ef       	ldi	r22, 0xF0	; 240
     c94:	70 e0       	ldi	r23, 0x00	; 0
     c96:	83 e0       	ldi	r24, 0x03	; 3
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     c9e:	60 e0       	ldi	r22, 0x00	; 0
     ca0:	70 e0       	ldi	r23, 0x00	; 0
     ca2:	82 e0       	ldi	r24, 0x02	; 2
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     caa:	60 e0       	ldi	r22, 0x00	; 0
     cac:	70 e0       	ldi	r23, 0x00	; 0
     cae:	81 e0       	ldi	r24, 0x01	; 1
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     cb6:	61 e0       	ldi	r22, 0x01	; 1
     cb8:	70 e0       	ldi	r23, 0x00	; 0
     cba:	86 e0       	ldi	r24, 0x06	; 6
     cbc:	92 e0       	ldi	r25, 0x02	; 2
     cbe:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     cc2:	62 e0       	ldi	r22, 0x02	; 2
     cc4:	70 e0       	ldi	r23, 0x00	; 0
     cc6:	86 e0       	ldi	r24, 0x06	; 6
     cc8:	92 e0       	ldi	r25, 0x02	; 2
     cca:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     cce:	63 e0       	ldi	r22, 0x03	; 3
     cd0:	70 e0       	ldi	r23, 0x00	; 0
     cd2:	8a e0       	ldi	r24, 0x0A	; 10
     cd4:	92 e0       	ldi	r25, 0x02	; 2
     cd6:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     cda:	87 e0       	ldi	r24, 0x07	; 7
     cdc:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     ce0:	83 e0       	ldi	r24, 0x03	; 3
     ce2:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     ce6:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     cea:	87 34       	cpi	r24, 0x47	; 71
     cec:	49 f0       	breq	.+18     	; 0xd00 <__vector_18+0x35c>
     cee:	18 f4       	brcc	.+6      	; 0xcf6 <__vector_18+0x352>
     cf0:	85 34       	cpi	r24, 0x45	; 69
     cf2:	d9 f0       	breq	.+54     	; 0xd2a <__vector_18+0x386>
     cf4:	62 c0       	rjmp	.+196    	; 0xdba <__vector_18+0x416>
     cf6:	8e 34       	cpi	r24, 0x4E	; 78
     cf8:	61 f1       	breq	.+88     	; 0xd52 <__vector_18+0x3ae>
     cfa:	82 35       	cpi	r24, 0x52	; 82
     cfc:	41 f0       	breq	.+16     	; 0xd0e <__vector_18+0x36a>
     cfe:	5d c0       	rjmp	.+186    	; 0xdba <__vector_18+0x416>
     d00:	81 e0       	ldi	r24, 0x01	; 1
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <reception_state2+0x1>
     d08:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <reception_state2>
     d0c:	56 c0       	rjmp	.+172    	; 0xdba <__vector_18+0x416>
     d0e:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <reception_state2>
     d12:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <reception_state2+0x1>
     d16:	01 97       	sbiw	r24, 0x01	; 1
     d18:	09 f0       	breq	.+2      	; 0xd1c <__vector_18+0x378>
     d1a:	4f c0       	rjmp	.+158    	; 0xdba <__vector_18+0x416>
     d1c:	82 e0       	ldi	r24, 0x02	; 2
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <reception_state2+0x1>
     d24:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <reception_state2>
     d28:	48 c0       	rjmp	.+144    	; 0xdba <__vector_18+0x416>
     d2a:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <reception_state2>
     d2e:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <reception_state2+0x1>
     d32:	02 97       	sbiw	r24, 0x02	; 2
     d34:	39 f4       	brne	.+14     	; 0xd44 <__vector_18+0x3a0>
     d36:	83 e0       	ldi	r24, 0x03	; 3
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <reception_state2+0x1>
     d3e:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <reception_state2>
     d42:	3b c0       	rjmp	.+118    	; 0xdba <__vector_18+0x416>
     d44:	84 e0       	ldi	r24, 0x04	; 4
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <reception_state2+0x1>
     d4c:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <reception_state2>
     d50:	34 c0       	rjmp	.+104    	; 0xdba <__vector_18+0x416>
     d52:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <reception_state2>
     d56:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <reception_state2+0x1>
     d5a:	04 97       	sbiw	r24, 0x04	; 4
     d5c:	71 f5       	brne	.+92     	; 0xdba <__vector_18+0x416>
     d5e:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <reception_state2+0x1>
     d62:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <reception_state2>
     d66:	6c ed       	ldi	r22, 0xDC	; 220
     d68:	70 e0       	ldi	r23, 0x00	; 0
     d6a:	82 e0       	ldi	r24, 0x02	; 2
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     d72:	60 e0       	ldi	r22, 0x00	; 0
     d74:	70 e0       	ldi	r23, 0x00	; 0
     d76:	81 e0       	ldi	r24, 0x01	; 1
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     d7e:	60 e0       	ldi	r22, 0x00	; 0
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	83 e0       	ldi	r24, 0x03	; 3
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     d8a:	61 e0       	ldi	r22, 0x01	; 1
     d8c:	70 e0       	ldi	r23, 0x00	; 0
     d8e:	86 e0       	ldi	r24, 0x06	; 6
     d90:	92 e0       	ldi	r25, 0x02	; 2
     d92:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     d96:	62 e0       	ldi	r22, 0x02	; 2
     d98:	70 e0       	ldi	r23, 0x00	; 0
     d9a:	8e e0       	ldi	r24, 0x0E	; 14
     d9c:	92 e0       	ldi	r25, 0x02	; 2
     d9e:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     da2:	63 e0       	ldi	r22, 0x03	; 3
     da4:	70 e0       	ldi	r23, 0x00	; 0
     da6:	86 e0       	ldi	r24, 0x06	; 6
     da8:	92 e0       	ldi	r25, 0x02	; 2
     daa:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     dae:	87 e0       	ldi	r24, 0x07	; 7
     db0:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     db4:	82 e0       	ldi	r24, 0x02	; 2
     db6:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     dba:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     dbe:	80 35       	cpi	r24, 0x50	; 80
     dc0:	49 f0       	breq	.+18     	; 0xdd4 <__vector_18+0x430>
     dc2:	18 f4       	brcc	.+6      	; 0xdca <__vector_18+0x426>
     dc4:	85 34       	cpi	r24, 0x45	; 69
     dc6:	41 f1       	breq	.+80     	; 0xe18 <__vector_18+0x474>
     dc8:	5b c0       	rjmp	.+182    	; 0xe80 <__vector_18+0x4dc>
     dca:	82 35       	cpi	r24, 0x52	; 82
     dcc:	c1 f0       	breq	.+48     	; 0xdfe <__vector_18+0x45a>
     dce:	85 35       	cpi	r24, 0x55	; 85
     dd0:	41 f0       	breq	.+16     	; 0xde2 <__vector_18+0x43e>
     dd2:	56 c0       	rjmp	.+172    	; 0xe80 <__vector_18+0x4dc>
     dd4:	81 e0       	ldi	r24, 0x01	; 1
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <reception_state4+0x1>
     ddc:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <reception_state4>
     de0:	4f c0       	rjmp	.+158    	; 0xe80 <__vector_18+0x4dc>
     de2:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <reception_state4>
     de6:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <reception_state4+0x1>
     dea:	01 97       	sbiw	r24, 0x01	; 1
     dec:	09 f0       	breq	.+2      	; 0xdf0 <__vector_18+0x44c>
     dee:	48 c0       	rjmp	.+144    	; 0xe80 <__vector_18+0x4dc>
     df0:	82 e0       	ldi	r24, 0x02	; 2
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <reception_state4+0x1>
     df8:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <reception_state4>
     dfc:	41 c0       	rjmp	.+130    	; 0xe80 <__vector_18+0x4dc>
     dfe:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <reception_state4>
     e02:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <reception_state4+0x1>
     e06:	02 97       	sbiw	r24, 0x02	; 2
     e08:	d9 f5       	brne	.+118    	; 0xe80 <__vector_18+0x4dc>
     e0a:	83 e0       	ldi	r24, 0x03	; 3
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <reception_state4+0x1>
     e12:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <reception_state4>
     e16:	34 c0       	rjmp	.+104    	; 0xe80 <__vector_18+0x4dc>
     e18:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <reception_state4>
     e1c:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <reception_state4+0x1>
     e20:	03 97       	sbiw	r24, 0x03	; 3
     e22:	71 f5       	brne	.+92     	; 0xe80 <__vector_18+0x4dc>
     e24:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <reception_state4+0x1>
     e28:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <reception_state4>
     e2c:	6f ef       	ldi	r22, 0xFF	; 255
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	81 e0       	ldi	r24, 0x01	; 1
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     e38:	60 e0       	ldi	r22, 0x00	; 0
     e3a:	70 e0       	ldi	r23, 0x00	; 0
     e3c:	82 e0       	ldi	r24, 0x02	; 2
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     e44:	67 ed       	ldi	r22, 0xD7	; 215
     e46:	70 e0       	ldi	r23, 0x00	; 0
     e48:	83 e0       	ldi	r24, 0x03	; 3
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     e50:	61 e0       	ldi	r22, 0x01	; 1
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	82 e0       	ldi	r24, 0x02	; 2
     e56:	92 e0       	ldi	r25, 0x02	; 2
     e58:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     e5c:	62 e0       	ldi	r22, 0x02	; 2
     e5e:	70 e0       	ldi	r23, 0x00	; 0
     e60:	86 e0       	ldi	r24, 0x06	; 6
     e62:	92 e0       	ldi	r25, 0x02	; 2
     e64:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     e68:	63 e0       	ldi	r22, 0x03	; 3
     e6a:	70 e0       	ldi	r23, 0x00	; 0
     e6c:	82 e1       	ldi	r24, 0x12	; 18
     e6e:	92 e0       	ldi	r25, 0x02	; 2
     e70:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     e74:	87 e0       	ldi	r24, 0x07	; 7
     e76:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     e7a:	84 e0       	ldi	r24, 0x04	; 4
     e7c:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     e80:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     e84:	8c 34       	cpi	r24, 0x4C	; 76
     e86:	f1 f0       	breq	.+60     	; 0xec4 <__vector_18+0x520>
     e88:	18 f4       	brcc	.+6      	; 0xe90 <__vector_18+0x4ec>
     e8a:	85 34       	cpi	r24, 0x45	; 69
     e8c:	69 f0       	breq	.+26     	; 0xea8 <__vector_18+0x504>
     e8e:	68 c0       	rjmp	.+208    	; 0xf60 <__vector_18+0x5bc>
     e90:	87 35       	cpi	r24, 0x57	; 87
     e92:	91 f1       	breq	.+100    	; 0xef8 <__vector_18+0x554>
     e94:	89 35       	cpi	r24, 0x59	; 89
     e96:	09 f0       	breq	.+2      	; 0xe9a <__vector_18+0x4f6>
     e98:	63 c0       	rjmp	.+198    	; 0xf60 <__vector_18+0x5bc>
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <reception_state3+0x1>
     ea2:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <reception_state3>
     ea6:	5c c0       	rjmp	.+184    	; 0xf60 <__vector_18+0x5bc>
     ea8:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <reception_state3>
     eac:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <reception_state3+0x1>
     eb0:	01 97       	sbiw	r24, 0x01	; 1
     eb2:	09 f0       	breq	.+2      	; 0xeb6 <__vector_18+0x512>
     eb4:	55 c0       	rjmp	.+170    	; 0xf60 <__vector_18+0x5bc>
     eb6:	82 e0       	ldi	r24, 0x02	; 2
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <reception_state3+0x1>
     ebe:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <reception_state3>
     ec2:	4e c0       	rjmp	.+156    	; 0xf60 <__vector_18+0x5bc>
     ec4:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <reception_state3>
     ec8:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <reception_state3+0x1>
     ecc:	02 97       	sbiw	r24, 0x02	; 2
     ece:	39 f4       	brne	.+14     	; 0xede <__vector_18+0x53a>
     ed0:	83 e0       	ldi	r24, 0x03	; 3
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <reception_state3+0x1>
     ed8:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <reception_state3>
     edc:	41 c0       	rjmp	.+130    	; 0xf60 <__vector_18+0x5bc>
     ede:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <reception_state3>
     ee2:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <reception_state3+0x1>
     ee6:	03 97       	sbiw	r24, 0x03	; 3
     ee8:	d9 f5       	brne	.+118    	; 0xf60 <__vector_18+0x5bc>
     eea:	84 e0       	ldi	r24, 0x04	; 4
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <reception_state3+0x1>
     ef2:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <reception_state3>
     ef6:	34 c0       	rjmp	.+104    	; 0xf60 <__vector_18+0x5bc>
     ef8:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <reception_state3>
     efc:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <reception_state3+0x1>
     f00:	04 97       	sbiw	r24, 0x04	; 4
     f02:	71 f5       	brne	.+92     	; 0xf60 <__vector_18+0x5bc>
     f04:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <reception_state3+0x1>
     f08:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <reception_state3>
     f0c:	68 ec       	ldi	r22, 0xC8	; 200
     f0e:	70 e0       	ldi	r23, 0x00	; 0
     f10:	81 e0       	ldi	r24, 0x01	; 1
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     f18:	66 e9       	ldi	r22, 0x96	; 150
     f1a:	70 e0       	ldi	r23, 0x00	; 0
     f1c:	82 e0       	ldi	r24, 0x02	; 2
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     f24:	60 e0       	ldi	r22, 0x00	; 0
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	83 e0       	ldi	r24, 0x03	; 3
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     f30:	61 e0       	ldi	r22, 0x01	; 1
     f32:	70 e0       	ldi	r23, 0x00	; 0
     f34:	86 e1       	ldi	r24, 0x16	; 22
     f36:	92 e0       	ldi	r25, 0x02	; 2
     f38:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     f3c:	62 e0       	ldi	r22, 0x02	; 2
     f3e:	70 e0       	ldi	r23, 0x00	; 0
     f40:	8a e1       	ldi	r24, 0x1A	; 26
     f42:	92 e0       	ldi	r25, 0x02	; 2
     f44:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     f48:	63 e0       	ldi	r22, 0x03	; 3
     f4a:	70 e0       	ldi	r23, 0x00	; 0
     f4c:	86 e0       	ldi	r24, 0x06	; 6
     f4e:	92 e0       	ldi	r25, 0x02	; 2
     f50:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
     f54:	87 e0       	ldi	r24, 0x07	; 7
     f56:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     f5a:	85 e0       	ldi	r24, 0x05	; 5
     f5c:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
     f60:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
     f64:	85 34       	cpi	r24, 0x45	; 69
     f66:	81 f0       	breq	.+32     	; 0xf88 <__vector_18+0x5e4>
     f68:	18 f4       	brcc	.+6      	; 0xf70 <__vector_18+0x5cc>
     f6a:	83 34       	cpi	r24, 0x43	; 67
     f6c:	31 f0       	breq	.+12     	; 0xf7a <__vector_18+0x5d6>
     f6e:	5b c0       	rjmp	.+182    	; 0x1026 <__vector_18+0x682>
     f70:	8c 34       	cpi	r24, 0x4C	; 76
     f72:	c1 f0       	breq	.+48     	; 0xfa4 <__vector_18+0x600>
     f74:	83 35       	cpi	r24, 0x53	; 83
     f76:	19 f1       	breq	.+70     	; 0xfbe <__vector_18+0x61a>
     f78:	56 c0       	rjmp	.+172    	; 0x1026 <__vector_18+0x682>
     f7a:	81 e0       	ldi	r24, 0x01	; 1
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <reception_state5+0x1>
     f82:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <reception_state5>
     f86:	4f c0       	rjmp	.+158    	; 0x1026 <__vector_18+0x682>
     f88:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <reception_state5>
     f8c:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <reception_state5+0x1>
     f90:	01 97       	sbiw	r24, 0x01	; 1
     f92:	09 f0       	breq	.+2      	; 0xf96 <__vector_18+0x5f2>
     f94:	48 c0       	rjmp	.+144    	; 0x1026 <__vector_18+0x682>
     f96:	82 e0       	ldi	r24, 0x02	; 2
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <reception_state5+0x1>
     f9e:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <reception_state5>
     fa2:	41 c0       	rjmp	.+130    	; 0x1026 <__vector_18+0x682>
     fa4:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <reception_state5>
     fa8:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <reception_state5+0x1>
     fac:	02 97       	sbiw	r24, 0x02	; 2
     fae:	d9 f5       	brne	.+118    	; 0x1026 <__vector_18+0x682>
     fb0:	83 e0       	ldi	r24, 0x03	; 3
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <reception_state5+0x1>
     fb8:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <reception_state5>
     fbc:	34 c0       	rjmp	.+104    	; 0x1026 <__vector_18+0x682>
     fbe:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <reception_state5>
     fc2:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <reception_state5+0x1>
     fc6:	03 97       	sbiw	r24, 0x03	; 3
     fc8:	71 f5       	brne	.+92     	; 0x1026 <__vector_18+0x682>
     fca:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <reception_state5+0x1>
     fce:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <reception_state5>
     fd2:	6b ee       	ldi	r22, 0xEB	; 235
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	83 e0       	ldi	r24, 0x03	; 3
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     fde:	63 ec       	ldi	r22, 0xC3	; 195
     fe0:	70 e0       	ldi	r23, 0x00	; 0
     fe2:	82 e0       	ldi	r24, 0x02	; 2
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     fea:	60 e0       	ldi	r22, 0x00	; 0
     fec:	70 e0       	ldi	r23, 0x00	; 0
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
     ff6:	61 e0       	ldi	r22, 0x01	; 1
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	86 e0       	ldi	r24, 0x06	; 6
     ffc:	92 e0       	ldi	r25, 0x02	; 2
     ffe:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
    1002:	62 e0       	ldi	r22, 0x02	; 2
    1004:	70 e0       	ldi	r23, 0x00	; 0
    1006:	8e e1       	ldi	r24, 0x1E	; 30
    1008:	92 e0       	ldi	r25, 0x02	; 2
    100a:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
    100e:	63 e0       	ldi	r22, 0x03	; 3
    1010:	70 e0       	ldi	r23, 0x00	; 0
    1012:	82 e2       	ldi	r24, 0x22	; 34
    1014:	92 e0       	ldi	r25, 0x02	; 2
    1016:	0e 94 db 03 	call	0x7b6	; 0x7b6 <ssd_num_write_data>
    101a:	87 e0       	ldi	r24, 0x07	; 7
    101c:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
    1020:	86 e0       	ldi	r24, 0x06	; 6
    1022:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <write_lcd_state>
    1026:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <usart_received_char>
    102a:	86 34       	cpi	r24, 0x46	; 70
    102c:	09 f0       	breq	.+2      	; 0x1030 <__vector_18+0x68c>
    102e:	63 c0       	rjmp	.+198    	; 0x10f6 <__vector_18+0x752>
    1030:	5c c0       	rjmp	.+184    	; 0x10ea <__vector_18+0x746>
    1032:	68 e2       	ldi	r22, 0x28	; 40
    1034:	70 e0       	ldi	r23, 0x00	; 0
    1036:	83 e0       	ldi	r24, 0x03	; 3
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
    103e:	2f ef       	ldi	r18, 0xFF	; 255
    1040:	89 e6       	ldi	r24, 0x69	; 105
    1042:	98 e1       	ldi	r25, 0x18	; 24
    1044:	21 50       	subi	r18, 0x01	; 1
    1046:	80 40       	sbci	r24, 0x00	; 0
    1048:	90 40       	sbci	r25, 0x00	; 0
    104a:	e1 f7       	brne	.-8      	; 0x1044 <__vector_18+0x6a0>
    104c:	00 c0       	rjmp	.+0      	; 0x104e <__vector_18+0x6aa>
    104e:	00 00       	nop
    1050:	6f ef       	ldi	r22, 0xFF	; 255
    1052:	70 e0       	ldi	r23, 0x00	; 0
    1054:	82 e0       	ldi	r24, 0x02	; 2
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
    105c:	2f ef       	ldi	r18, 0xFF	; 255
    105e:	89 e6       	ldi	r24, 0x69	; 105
    1060:	98 e1       	ldi	r25, 0x18	; 24
    1062:	21 50       	subi	r18, 0x01	; 1
    1064:	80 40       	sbci	r24, 0x00	; 0
    1066:	90 40       	sbci	r25, 0x00	; 0
    1068:	e1 f7       	brne	.-8      	; 0x1062 <__vector_18+0x6be>
    106a:	00 c0       	rjmp	.+0      	; 0x106c <__vector_18+0x6c8>
    106c:	00 00       	nop
    106e:	64 e6       	ldi	r22, 0x64	; 100
    1070:	70 e0       	ldi	r23, 0x00	; 0
    1072:	81 e0       	ldi	r24, 0x01	; 1
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
    107a:	2f ef       	ldi	r18, 0xFF	; 255
    107c:	89 e6       	ldi	r24, 0x69	; 105
    107e:	98 e1       	ldi	r25, 0x18	; 24
    1080:	21 50       	subi	r18, 0x01	; 1
    1082:	80 40       	sbci	r24, 0x00	; 0
    1084:	90 40       	sbci	r25, 0x00	; 0
    1086:	e1 f7       	brne	.-8      	; 0x1080 <__vector_18+0x6dc>
    1088:	00 c0       	rjmp	.+0      	; 0x108a <__vector_18+0x6e6>
    108a:	00 00       	nop
    108c:	6f ef       	ldi	r22, 0xFF	; 255
    108e:	70 e0       	ldi	r23, 0x00	; 0
    1090:	83 e0       	ldi	r24, 0x03	; 3
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
    1098:	2f ef       	ldi	r18, 0xFF	; 255
    109a:	89 e6       	ldi	r24, 0x69	; 105
    109c:	98 e1       	ldi	r25, 0x18	; 24
    109e:	21 50       	subi	r18, 0x01	; 1
    10a0:	80 40       	sbci	r24, 0x00	; 0
    10a2:	90 40       	sbci	r25, 0x00	; 0
    10a4:	e1 f7       	brne	.-8      	; 0x109e <__vector_18+0x6fa>
    10a6:	00 c0       	rjmp	.+0      	; 0x10a8 <__vector_18+0x704>
    10a8:	00 00       	nop
    10aa:	64 e6       	ldi	r22, 0x64	; 100
    10ac:	70 e0       	ldi	r23, 0x00	; 0
    10ae:	82 e0       	ldi	r24, 0x02	; 2
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
    10b6:	2f ef       	ldi	r18, 0xFF	; 255
    10b8:	89 e6       	ldi	r24, 0x69	; 105
    10ba:	98 e1       	ldi	r25, 0x18	; 24
    10bc:	21 50       	subi	r18, 0x01	; 1
    10be:	80 40       	sbci	r24, 0x00	; 0
    10c0:	90 40       	sbci	r25, 0x00	; 0
    10c2:	e1 f7       	brne	.-8      	; 0x10bc <__vector_18+0x718>
    10c4:	00 c0       	rjmp	.+0      	; 0x10c6 <__vector_18+0x722>
    10c6:	00 00       	nop
    10c8:	64 e1       	ldi	r22, 0x14	; 20
    10ca:	70 e0       	ldi	r23, 0x00	; 0
    10cc:	81 e0       	ldi	r24, 0x01	; 1
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	0e 94 db 00 	call	0x1b6	; 0x1b6 <pwm_led>
    10d4:	2f ef       	ldi	r18, 0xFF	; 255
    10d6:	89 e6       	ldi	r24, 0x69	; 105
    10d8:	98 e1       	ldi	r25, 0x18	; 24
    10da:	21 50       	subi	r18, 0x01	; 1
    10dc:	80 40       	sbci	r24, 0x00	; 0
    10de:	90 40       	sbci	r25, 0x00	; 0
    10e0:	e1 f7       	brne	.-8      	; 0x10da <__vector_18+0x736>
    10e2:	00 c0       	rjmp	.+0      	; 0x10e4 <__vector_18+0x740>
    10e4:	00 00       	nop
    10e6:	21 96       	adiw	r28, 0x01	; 1
    10e8:	02 c0       	rjmp	.+4      	; 0x10ee <__vector_18+0x74a>
    10ea:	c0 e0       	ldi	r28, 0x00	; 0
    10ec:	d0 e0       	ldi	r29, 0x00	; 0
    10ee:	c5 30       	cpi	r28, 0x05	; 5
    10f0:	d1 05       	cpc	r29, r1
    10f2:	0c f4       	brge	.+2      	; 0x10f6 <__vector_18+0x752>
    10f4:	9e cf       	rjmp	.-196    	; 0x1032 <__vector_18+0x68e>
    10f6:	ff 91       	pop	r31
    10f8:	ef 91       	pop	r30
    10fa:	df 91       	pop	r29
    10fc:	cf 91       	pop	r28
    10fe:	bf 91       	pop	r27
    1100:	af 91       	pop	r26
    1102:	9f 91       	pop	r25
    1104:	8f 91       	pop	r24
    1106:	7f 91       	pop	r23
    1108:	6f 91       	pop	r22
    110a:	5f 91       	pop	r21
    110c:	4f 91       	pop	r20
    110e:	3f 91       	pop	r19
    1110:	2f 91       	pop	r18
    1112:	0f 90       	pop	r0
    1114:	0f be       	out	0x3f, r0	; 63
    1116:	0f 90       	pop	r0
    1118:	1f 90       	pop	r1
    111a:	18 95       	reti

0000111c <init_usart>:

void init_usart(unsigned int baudrate){
	UCSR0C &= (~(1<<UMSEL00) & ~(1<<UMSEL01)); // bit UMSEL = 0 asyncronous mode	
    111c:	e2 ec       	ldi	r30, 0xC2	; 194
    111e:	f0 e0       	ldi	r31, 0x00	; 0
    1120:	20 81       	ld	r18, Z
    1122:	2f 73       	andi	r18, 0x3F	; 63
    1124:	20 83       	st	Z, r18
	UCSR0A = (1<<U2X0); // bit U2X = 1 double speed
    1126:	22 e0       	ldi	r18, 0x02	; 2
    1128:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
	//Baudrate:fosc=16Mhz,U2Xn=1,BaudRate=9600, then UBRR= 207 (DS pag.199)
	UBRR0H = (unsigned char) (baudrate>>8); // write(MSB)
    112c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char) (baudrate);	//write(LSB)
    1130:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0C = ((1<<UCSZ00) | (1<<UCSZ01)); //8 bits data lenght
    1134:	86 e0       	ldi	r24, 0x06	; 6
    1136:	80 83       	st	Z, r24
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);	//enable transmitter & receiver
    1138:	e1 ec       	ldi	r30, 0xC1	; 193
    113a:	f0 e0       	ldi	r31, 0x00	; 0
    113c:	88 e1       	ldi	r24, 0x18	; 24
    113e:	80 83       	st	Z, r24
	//UCSRC = (1<<USBS);	//2 stop bits
	UCSR0B |= (1<<RXCIE0);	//enable reception complete (RXCIE0=1) interrupts
    1140:	80 81       	ld	r24, Z
    1142:	80 68       	ori	r24, 0x80	; 128
    1144:	80 83       	st	Z, r24
    1146:	08 95       	ret

00001148 <__tablejump2__>:
    1148:	ee 0f       	add	r30, r30
    114a:	ff 1f       	adc	r31, r31
    114c:	05 90       	lpm	r0, Z+
    114e:	f4 91       	lpm	r31, Z
    1150:	e0 2d       	mov	r30, r0
    1152:	09 94       	ijmp

00001154 <_exit>:
    1154:	f8 94       	cli

00001156 <__stop_program>:
    1156:	ff cf       	rjmp	.-2      	; 0x1156 <__stop_program>
